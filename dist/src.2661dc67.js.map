{"version":3,"sources":["node_modules/tonal/note/index.js","node_modules/tonal/chord-dictionary/chord-data.js","node_modules/tonal/interval/index.js","node_modules/tonal/array/index.js","node_modules/tonal/pcset/index.js","node_modules/process/browser.js","lib/rsvp.js","lib/rsvp/events.js","lib/rsvp/config.js","lib/rsvp/instrument.js","lib/rsvp/promise/resolve.js","lib/rsvp/-internal.js","lib/rsvp/then.js","lib/rsvp/enumerator.js","lib/rsvp/promise/all.js","lib/rsvp/promise/race.js","lib/rsvp/promise/reject.js","lib/rsvp/promise.js","lib/rsvp/node.js","lib/rsvp/all.js","lib/rsvp/all-settled.js","lib/rsvp/race.js","lib/rsvp/promise-hash.js","lib/rsvp/hash.js","lib/rsvp/hash-settled.js","lib/rsvp/rethrow.js","lib/rsvp/defer.js","lib/rsvp/map.js","lib/rsvp/resolve.js","lib/rsvp/reject.js","lib/rsvp/filter.js","lib/rsvp/asap.js","node_modules/tonal/chord-dictionary/index.js","node_modules/tonal/detect/index.js","src/utils.js","src/keyboard.js","src/ui.js","src/chords.js","src/events.js","src/midi.js","src/index.js"],"names":["tokenize","props","name","names","pc","oct","chroma","midi","freq","fromMidi","freqToMidi","altToAcc","stepToLetter","fromProps","simplify","enharmonic","NAMES","split","types","filter","note","unaltered","undefined","flats","sharps","SHARPS","FLATS","REGEX","str","m","exec","toUpperCase","replace","NO_NOTE","Object","freeze","step","alt","octStr","SEMI","properties","tokens","letter","acc","p","charCodeAt","length","midiToFreq","cached","isMidiRange","value","tuning","Math","pow","L2","log","L440","v","round","LETTERS","fillStr","s","n","Array","join","numToStr","num","op","baseNote","assign","options","pcs","pitchClass","floor","sameAccType","invert","ic","semitones","fromSemitones","IVL_TNL","IVL_STR","RegExp","SIZES","TYPES","CLASSES","slice","indexOf","NO_IVL","q","dir","type","simple","abs","qToAlt","test","altToQ","numToStep","t","cache","ivl","d","IN","IQ","c","o","isArray","range","rotate","compact","sort","sortedUniq","shuffle","permutations","ascR","b","a","descR","assert","array","msg","Error","times","arr","len","concat","height","src","map","i","rnd","random","reduce","perm","e","pos","newPerm","splice","chromas","isChroma","intervals","isSubsetOf","isSupersetOf","isEqual","modes","includes","pcsetNum","set","parseInt","numNotes","ch","binary","all","toString","normalize","_","r","IVLS","s1","s2","arguments","notes","cachedSetTimeout","cachedClearTimeout","process","module","exports","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","call","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","Item","noop","nextTick","args","push","prototype","apply","title","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask","resolve","_resolve","then","originalThen","originalResolve","OwnPromise","ownResolve","ownThen","reject","_reject","Resolve","Reject","race","_possibleConstructorReturn","_inherits","scheduleFlush","find","toChord","data","abbreviatures","chord","has","interval","quality","setnum","byName","localeCompare","NO_SCALE","isString","abbreviature","root","offset","results","forEach","rotation","found","score","mod","tonic","scale","min","max","fill","toRGBA","colorStr","alpha","match","color","toLowerCase","substr","g","keyboardContainer","document","getElementById","NOTE_RADIUS","NOTE_WHITE_WIDTH","NOTE_WHITE_HEIGHT","NOTE_BLACK_WIDTH","NOTE_BLACK_HEIGHT","NOTE_TONIC_RADIUS","NOTE_TONIC_BOTTOM_OFFSET","NOTE_NAME_BOTTOM_OFFSET","WHEEL_RADIUS","WHEEL_PADDING","WHEEL_MARGIN","WHEEL_WIDTH","WHEEL_HEIGHT","WHEEL_AMPLITUDE","pitchWheelColorDown","pitchWheelColorUp","modWheelColor","NOTE_WHITE_TEMPLATE","posX","NOTE_BLACK_TEMPLATE","WHEEL_TEMPLATE","id","offsetX","KEYBOARD_TEMPLATE","keyboardNotes","wheels","width","markup","getWheelsMarkup","ids","getNoteMarkup","noteNumber","Note","isWhite","generateKeyboard","from","to","wheelIds","toProps","noteStart","noteEnd","keyboard","setPitchWheel","pitch","pitchWheelSocket","querySelector","pitchWheel","translateY","setAttribute","style","setModWheel","modWheelSocket","modWheel","initializeKeyboard","innerHTML","chordDisplay","notesDisplay","highlightNote","className","keyElement","classList","add","fadeNote","remove","highlightTonic","fadeTonics","elements","querySelectorAll","setChordHtml","html","setNotesHtml","ROMAN_NOTATION","FLAT_HTML","SHARP_HTML","NOTES","C","D","E","F","G","A","B","chordToHtml","keyToHtml","chordNameToHtml","chordBassToHtml","keyName","altToHtml","sharpOrFlat","chordName","bass","currentNotes","currentPitch","currentModulation","previousChord","noteOn","refresh","noteOff","index","onEvent","console","chords","controller","bind","polyPressure","PREFERRED_MIDI","midiMessageReceived","ev","cmd","channel","velocity","selectMIDI","midiAccess","midiIn","selectMIDIIn","onmidimessage","target","selectedIndex","inputs","get","populateMIDIInSelect","state","firstInput","values","input","next","done","preferred","pref","appendChild","Option","midiConnectionStateChange","port","connection","onMIDIStarted","onstatechange","onchange","onMIDISystemError","err","showError","code","initializeMidi","navigator","requestMIDIAccess","initialized"],"mappings":"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","file":"src.2661dc67.js","sourceRoot":"..","sourcesContent":["/**\n * A collection of functions to manipulate musical notes in scientific notation\n *\n * ## Usage\n *\n * @example\n * import Note from \"tonal/note\"\n * Note.name(\"bb2\") // => \"Bb2\"\n * Note.chroma(\"bb2\") // => 10\n * Note.midi(\"a4\") // => 69\n * Note.freq(\"a4\") // => 440\n * Note.oct(\"G3\") // => 3\n *\n * @example\n * const Tonal = require('tonal')\n * Tonal.Note.midi(\"C4\") // => 60\n *\n * ## API\n *\n * @module Note\n */\nexport default {\n  tokenize,\n  props,\n  name,\n  names,\n  pc,\n  oct,\n  chroma,\n  midi,\n  freq,\n  fromMidi,\n  freqToMidi,\n  altToAcc,\n  stepToLetter,\n  fromProps,\n  simplify,\n  enharmonic\n};\n\nconst NAMES = \"C C# Db D D# Eb E F F# Gb G G# Ab A A# Bb B\".split(\" \");\n\n/**\n * Get a list of note names (pitch classes) within a octave\n *\n * @param {string} filter - an object with\n * - [boolean] unaltered: defaults to true\n * - [boolean] flats: defaults to false\n * - [boolean] sharps: defaults to false\n * @return {Array<string>} the list of notes\n *\n * @example\n * Note.names() // => [ \"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\" ]\n * Note.names({ flats: true }) // => [ \"C\", \"Db\", \"D\", \"Eb\", \"E\", \"F\", \"Gb\", \"G\", \"Ab\", \"A\", \"Bb\", \"B\" ]\n * Note.names({ sharps: true }) // => [ \"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\" ]\n * Note.names({ unaltered: false, flats: true })\n * // => [ \"Db\", \"Eb\", \"Gb\", \"Ab\", \"Bb\" ]\n */\nexport function names(types = {}) {\n  return NAMES.filter(\n    note =>\n      (types.unaltered !== false && note[1] === undefined) ||\n      (types.flats === true && note[1] === \"b\") ||\n      (types.sharps === true && note[1] === \"#\")\n  );\n}\n\nconst SHARPS = names({ sharps: true });\nconst FLATS = names({ flats: true });\nconst REGEX = /^([a-gA-G]?)(#{1,}|b{1,}|x{1,}|)(-?\\d*)\\s*(.*)$/;\n\n/**\n * Split a string into tokens related to note parts.\n * It returns an array of strings `[letter, accidental, octave, modifier]`\n *\n * It always returns an array\n *\n * @param {string} str\n * @return {Array} an array of note tokens\n * @example\n * Note.tokenize(\"C#2\") // => [\"C\", \"#\", \"2\", \"\"]\n * Note.tokenize(\"Db3 major\") // => [\"D\", \"b\", \"3\", \"major\"]\n * Note.tokenize(\"major\") // => [\"\", \"\", \"\", \"major\"]\n * Note.tokenize(\"##\") // => [\"\", \"##\", \"\", \"\"]\n * Note.tokenize() // => [\"\", \"\", \"\", \"\"]\n */\nexport function tokenize(str) {\n  if (typeof str !== \"string\") str = \"\";\n  const m = REGEX.exec(str);\n  if (!m) return null;\n  return [m[1].toUpperCase(), m[2].replace(/x/g, \"##\"), m[3], m[4]];\n}\n\nconst NO_NOTE = Object.freeze({\n  pc: null,\n  name: null,\n  step: null,\n  alt: null,\n  oct: null,\n  octStr: null,\n  chroma: null,\n  midi: null,\n  freq: null\n});\n\nconst SEMI = [0, 2, 4, 5, 7, 9, 11];\nconst properties = str => {\n  const tokens = tokenize(str);\n  if (tokens[0] === \"\" || tokens[3] !== \"\") return NO_NOTE;\n  const [letter, acc, octStr] = tokens;\n  const p = { letter, acc, octStr };\n  p.pc = p.letter + p.acc;\n  p.name = p.pc + octStr;\n  p.step = (p.letter.charCodeAt(0) + 3) % 7;\n  p.alt = p.acc[0] === \"b\" ? -p.acc.length : p.acc.length;\n  p.oct = octStr.length ? +octStr : null;\n  p.chroma = (SEMI[p.step] + p.alt + 120) % 12;\n  p.midi = p.oct !== null ? SEMI[p.step] + p.alt + 12 * (p.oct + 1) : null;\n  p.freq = midiToFreq(p.midi);\n  return Object.freeze(p);\n};\n\nlet cached = {};\n/**\n * Get note properties. It returns an object with the following information:\n *\n * - name {string}: the note name. The letter is always in uppercase\n * - letter {string}: the note letter, always in uppercase\n * - acc {string}: the note accidentals\n * - octave {number}: the octave or null if not present\n * - pc {string}: the pitch class (letter + accidentals)\n * - step {number}: number equivalent of the note letter. 0 means C ... 6 means B.\n * - alt {number}: number equivalent of accidentals (negative are flats, positive sharps)\n * - chroma {number}: number equivalent of the pitch class, where 0 is C, 1 is C# or Db, 2 is D...\n * - midi {number}: the note midi number (IMPORTANT! it can be outside 0 to 127 range)\n * - freq {number}: the frequency using an equal temperament at 440Hz\n *\n * This function *always* returns an object with all this properties, but if it\"s\n * not a valid note all properties will be null.\n *\n * The returned object can\"t be mutated.\n *\n * @param {string} note - the note name in scientific notation\n * @return {Object} an object with the properties (or an object will all properties\n * set to null if not valid note)\n * @example\n * Note.props(\"fx-3\").name // => \"F##-3\"\n * Note.props(\"invalid\").name // => null\n * Note.props(\"C#3\").oct // => 3\n * Note.props().oct // => null\n */\nexport function props(str) {\n  return cached[str] || (cached[str] = properties(str));\n}\n\n/**\n * Given a note name, return the note name or null if not valid note.\n * The note name will ALWAYS have the letter in upercase and accidentals\n * using # or b\n *\n * Can be used to test if a string is a valid note name.\n *\n * @function\n * @param {Pitch|string}\n * @return {string}\n *\n * @example\n * Note.name(\"cb2\") // => \"Cb2\"\n * [\"c\", \"db3\", \"2\", \"g+\", \"gx4\"].map(Note.name) // => [\"C\", \"Db3\", null, null, \"G##4\"]\n */\nexport function name(str) {\n  return props(str).name;\n}\n\n/**\n * Get pitch class of a note. The note can be a string or a pitch array.\n *\n * @function\n * @param {string|Pitch}\n * @return {string} the pitch class\n * @example\n * Note.pc(\"Db3\") // => \"Db\"\n * [\"db3\", \"bb6\", \"fx2\"].map(Note.pc) // => [ \"Db\", \"Bb\", \"F##\"]\n */\nexport function pc(str) {\n  return props(str).pc;\n}\n\nconst isMidiRange = m => m >= 0 && m <= 127;\n/**\n * Get the note midi number. It always return a number between 0 and 127\n *\n * @function\n * @param {string|Number} note - the note to get the midi number from\n * @return {Integer} the midi number or null if not valid pitch\n * @example\n * Note.midi(\"C4\") // => 60\n * Note.midi(60) // => 60\n * @see midi.toMidi\n */\nexport function midi(note) {\n  if (typeof note !== \"number\" && typeof note !== \"string\") {\n    return null;\n  }\n  const midi = props(note).midi;\n  const value = midi || midi === 0 ? midi : +note;\n  return isMidiRange(value) ? value : null;\n}\n\n/**\n * Get the frequency from midi number\n *\n * @param {number} midi - the note midi number\n * @param {number} tuning - (Optional) 440 by default\n * @return {number} the frequency or null if not valid note midi\n */\nexport const midiToFreq = (midi, tuning = 440) =>\n  typeof midi === \"number\" ? Math.pow(2, (midi - 69) / 12) * tuning : null;\n\n/**\n * Get the frequency of a note\n *\n * @function\n * @param {string|Number} note - the note name or midi note number\n * @return {number} the frequency\n * @example\n * Note.freq(\"A4\") // => 440\n * Note.freq(69) // => 440\n */\nexport function freq(note) {\n  return props(note).freq || midiToFreq(note);\n}\n\nconst L2 = Math.log(2);\nconst L440 = Math.log(440);\n/**\n * Get the midi number from a frequency in hertz. The midi number can\n * contain decimals (with two digits precission)\n *\n * @param {number} frequency\n * @return {number}\n * @example\n * Note.freqToMidi(220)); //=> 57;\n * Note.freqToMidi(261.62)); //=> 60;\n * Note.freqToMidi(261)); //=> 59.96;\n */\nexport function freqToMidi(freq) {\n  const v = (12 * (Math.log(freq) - L440)) / L2 + 69;\n  return Math.round(v * 100) / 100;\n}\n\n/**\n * Return the chroma of a note. The chroma is the numeric equivalent to the\n * pitch class, where 0 is C, 1 is C# or Db, 2 is D... 11 is B\n *\n * @param {string} note - the note name\n * @return {Integer} the chroma number\n * @example\n * Note.chroma(\"Cb\") // => 11\n * [\"C\", \"D\", \"E\", \"F\"].map(Note.chroma) // => [0, 2, 4, 5]\n */\nexport function chroma(str) {\n  return props(str).chroma;\n}\n\n/**\n * Get the octave of the given pitch\n *\n * @function\n * @param {string} note - the note\n * @return {Integer} the octave or null if doesn\"t have an octave or not a valid note\n * @example\n * Note.oct(\"C#4\") // => 4\n * Note.oct(\"C\") // => null\n * Note.oct(\"blah\") // => undefined\n */\nexport function oct(str) {\n  return props(str).oct;\n}\n\nconst LETTERS = \"CDEFGAB\";\n/**\n * Given a step number return it's letter (0 = C, 1 = D, 2 = E)\n * @param {number} step\n * @return {string} the letter\n * @example\n * Note.stepToLetter(3) // => \"F\"\n */\nexport function stepToLetter(step) {\n  return LETTERS[step];\n}\n\nconst fillStr = (s, n) => Array(n + 1).join(s);\nconst numToStr = (num, op) => (typeof num !== \"number\" ? \"\" : op(num));\n\n/**\n * Given an alteration number, return the accidentals\n * @param {number} alt\n * @return {string}\n * @example\n * Note.altToAcc(-3) // => \"bbb\"\n */\nexport function altToAcc(alt) {\n  return numToStr(alt, alt =>\n    alt < 0 ? fillStr(\"b\", -alt) : fillStr(\"#\", alt)\n  );\n}\n\n/**\n * Creates a note name in scientific notation from note properties,\n * and optionally another note name.\n * It receives an object with:\n * - step: the note step (0 = C, 1 = D, ... 6 = B)\n * - alt: (optional) the alteration. Negative numbers are flats, positive sharps\n * - oct: (optional) the octave\n *\n * Optionally it receives another note as a \"base\", meaning that any prop not explicitly\n * received on the first parameter will be taken from that base note. That way it can be used\n * as an immutable \"set\" operator for a that base note\n *\n * @function\n * @param {Object} props - the note properties\n * @param {string} [baseNote] - note to build the result from. If given, it returns\n * the result of applying the given props to this note.\n * @return {string} the note name in scientific notation or null if not valid properties\n * @example\n * Note.from({ step: 5 }) // => \"A\"\n * Note.from({ step: 1, acc: -1 }) // => \"Db\"\n * Note.from({ step: 2, acc: 2, oct: 2 }) // => \"E##2\"\n * Note.from({ step: 7 }) // => null\n * Note.from({alt: 1, oct: 3}, \"C4\") // => \"C#3\"\n */\nexport function fromProps(fromProps = {}, baseNote = null) {\n  const { step, alt, oct } = baseNote\n    ? Object.assign({}, props(baseNote), fromProps)\n    : fromProps;\n  const letter = stepToLetter(step);\n  if (!letter) return null;\n  const pc = letter + altToAcc(alt);\n  return oct || oct === 0 ? pc + oct : pc;\n}\n\n/**\n * Given a midi number, returns a note name. The altered notes will have\n * flats unless explicitly set with the optional `useSharps` parameter.\n *\n * @function\n * @param {number} midi - the midi note number\n * @param {Object} options = default: `{ sharps: false, pitchClass: false }`\n * @param {boolean} useSharps - (Optional) set to true to use sharps instead of flats\n * @return {string} the note name\n * @example\n * Note.fromMidi(61) // => \"Db4\"\n * Note.fromMidi(61, { pitchClass: true }) // => \"Db\"\n * Note.fromMidi(61, { sharps: true }) // => \"C#4\"\n * Note.fromMidi(61, { pitchClass: true, sharps: true }) // => \"C#\"\n * // it rounds to nearest note\n * Note.fromMidi(61.7) // => \"D4\"\n */\nexport function fromMidi(num, options = {}) {\n  num = Math.round(num);\n  const pcs = options.sharps === true ? SHARPS : FLATS;\n  const pc = pcs[num % 12];\n  if (options.pitchClass) return pc;\n  const o = Math.floor(num / 12) - 1;\n  return pc + o;\n}\n\n/**\n * Simplify the note: find an enhramonic note with less accidentals.\n *\n * @param {string} note - the note to be simplified\n * @param {object} options\n * - sameAccType: default true. Use same kind of accidentals that source\n * @return {string} the simplfiied note or null if not valid note\n * @example\n * Note.simplify(\"C##\") // => \"D\"\n * Note.simplify(\"C###\") // => \"D#\"\n * Note.simplify(\"C###\", { sameAccType : false }) // => \"Eb\"\n * Note.simplify(\"B#4\") // => \"C5\"\n */\nexport function simplify(note, options = {}) {\n  const { alt, chroma, midi } = props(note);\n  if (chroma === null) return null;\n\n  const sharps = options.sameAccType === false ? alt < 0 : alt > 0;\n  const pitchClass = midi === null;\n\n  return fromMidi(midi || chroma, { sharps, pitchClass });\n}\n\n/**\n * Get the simplified and enhramonic note of the given one.\n *\n * @param {string} note\n * @return {string} the enhramonic note\n * @example\n * Note.enharmonic(\"Db\") // => \"C#\"\n * Note.enhramonic(\"C\") // => \"C\"\n */\nexport function enharmonic(note) {\n  return simplify(note, false);\n}\n","// CHORDS\n// Format: [\"intervals\", \"full name\", \"abrv1 abrv2\"]\n// Source: https://en.wikibooks.org/wiki/Music_Theory/Complete_List_of_Chord_Patterns\nexport default [\n  // ==Major==\n  [\"1P 3M 5P\", \"major\", \"M \"],\n  [\"1P 3M 5P 7M\", \"major seventh\", \"maj7 Δ ma7 M7 Maj7\"],\n  [\"1P 3M 5P 7M 9M\", \"major ninth\", \"maj9 Δ9\"],\n  [\"1P 3M 5P 7M 9M 13M\", \"major thirteenth\", \"maj13 Maj13\"],\n  [\"1P 3M 5P 6M\", \"sixth\", \"6 add6 add13 M6\"],\n  [\"1P 3M 5P 6M 9M\", \"sixth/ninth\", \"6/9 69\"],\n  [\"1P 3M 5P 7M 11A\", \"lydian\", \"maj#4 Δ#4 Δ#11\"],\n  [\"1P 3M 6m 7M\", \"major seventh b6\", \"M7b6\"],\n  // ==Minor==\n  // '''Normal'''\n  [\"1P 3m 5P\", \"minor\", \"m min -\"],\n  [\"1P 3m 5P 7m\", \"minor seventh\", \"m7 min7 mi7 -7\"],\n  [\"1P 3m 5P 7M\", \"minor/major seventh\", \"m/ma7 m/maj7 mM7 m/M7 -Δ7 mΔ\"],\n  [\"1P 3m 5P 6M\", \"minor sixth\", \"m6\"],\n  [\"1P 3m 5P 7m 9M\", \"minor ninth\", \"m9\"],\n  [\"1P 3m 5P 7m 9M 11P\", \"minor eleventh\", \"m11\"],\n  [\"1P 3m 5P 7m 9M 13M\", \"minor thirteenth\", \"m13\"],\n  // '''Diminished'''\n  [\"1P 3m 5d\", \"diminished\", \"dim ° o\"],\n  [\"1P 3m 5d 7d\", \"diminished seventh\", \"dim7 °7 o7\"],\n  [\"1P 3m 5d 7m\", \"half-diminished\", \"m7b5 ø\"],\n  // ==Dominant/Seventh==\n  // '''Normal'''\n  [\"1P 3M 5P 7m\", \"dominant seventh\", \"7 dom\"],\n  [\"1P 3M 5P 7m 9M\", \"dominant ninth\", \"9\"],\n  [\"1P 3M 5P 7m 9M 13M\", \"dominant thirteenth\", \"13\"],\n  [\"1P 3M 5P 7m 11A\", \"lydian dominant seventh\", \"7#11 7#4\"],\n  // '''Altered'''\n  [\"1P 3M 5P 7m 9m\", \"dominant b9\", \"7b9\"],\n  [\"1P 3M 5P 7m 9A\", \"dominant #9\", \"7#9\"],\n  [\"1P 3M 7m 9m\", \"altered\", \"alt7\"],\n  // '''Suspended'''\n  [\"1P 4P 5P\", \"suspended 4th\", \"sus4\"],\n  [\"1P 2M 5P\", \"suspended 2nd\", \"sus2\"],\n  [\"1P 4P 5P 7m\", \"suspended 4th seventh\", \"7sus4\"],\n  [\"1P 5P 7m 9M 11P\", \"eleventh\", \"11 sus Bb/C for C11\"],\n  [\"1P 4P 5P 7m 9m\", \"suspended 4th b9\", \"b9sus phryg\"],\n  // ==Other==\n  [\"1P 5P\", \"fifth\", \"5\"],\n  [\"1P 3M 5A\", \"augmented\", \"aug + +5\"],\n  [\"1P 3M 5A 7M\", \"augmented seventh\", \"maj7#5 maj7+5\"],\n  [\"1P 3M 5P 7M 9M 11A\", \"major #11 (lydian)\", \"maj9#11 Δ9#11\"],\n  [\"1P 3M 5P 7m 9A\", \"dominant #9\", \"7#9\"],\n  // ==Legacy==\n  [\"1P 2M 4P 5P\", null, \"sus24 sus4add9\"],\n  [\"1P 3M 13m\", null, \"Mb6\"],\n  [\"1P 3M 5A 7M 9M\", null, \"maj9#5 Maj9#5\"],\n  [\"1P 3M 5A 7m\", null, \"7#5 +7 7aug aug7\"],\n  [\"1P 3M 5A 7m 9A\", null, \"7#5#9 7alt 7#5#9_ 7#9b13_\"],\n  [\"1P 3M 5A 7m 9M\", null, \"9#5 9+\"],\n  [\"1P 3M 5A 7m 9M 11A\", null, \"9#5#11\"],\n  [\"1P 3M 5A 7m 9m\", null, \"7#5b9\"],\n  [\"1P 3M 5A 7m 9m 11A\", null, \"7#5b9#11\"],\n  [\"1P 3M 5A 9A\", null, \"+add#9\"],\n  [\"1P 3M 5A 9M\", null, \"M#5add9 +add9\"],\n  [\"1P 3M 5P 6M 11A\", null, \"M6#11 M6b5 6#11 6b5\"],\n  [\"1P 3M 5P 6M 7M 9M\", null, \"M7add13\"],\n  [\"1P 3M 5P 6M 9M 11A\", null, \"69#11\"],\n  [\"1P 3M 5P 6m 7m\", null, \"7b6\"],\n  [\"1P 3M 5P 7M 9A 11A\", null, \"maj7#9#11\"],\n  [\"1P 3M 5P 7M 9M 11A 13M\", null, \"M13#11 maj13#11 M13+4 M13#4\"],\n  [\"1P 3M 5P 7M 9m\", null, \"M7b9\"],\n  [\"1P 3M 5P 7m 11A 13m\", null, \"7#11b13 7b5b13\"],\n  [\"1P 3M 5P 7m 13M\", null, \"7add6 67 7add13\"],\n  [\"1P 3M 5P 7m 9A 11A\", null, \"7#9#11 7b5#9\"],\n  [\"1P 3M 5P 7m 9A 11A 13M\", null, \"13#9#11\"],\n  [\"1P 3M 5P 7m 9A 11A 13m\", null, \"7#9#11b13\"],\n  [\"1P 3M 5P 7m 9A 13M\", null, \"13#9 13#9_\"],\n  [\"1P 3M 5P 7m 9A 13m\", null, \"7#9b13\"],\n  [\"1P 3M 5P 7m 9M 11A\", null, \"9#11 9+4 9#4 9#11_ 9#4_\"],\n  [\"1P 3M 5P 7m 9M 11A 13M\", null, \"13#11 13+4 13#4\"],\n  [\"1P 3M 5P 7m 9M 11A 13m\", null, \"9#11b13 9b5b13\"],\n  [\"1P 3M 5P 7m 9m 11A\", null, \"7b9#11 7b5b9\"],\n  [\"1P 3M 5P 7m 9m 11A 13M\", null, \"13b9#11\"],\n  [\"1P 3M 5P 7m 9m 11A 13m\", null, \"7b9b13#11 7b9#11b13 7b5b9b13\"],\n  [\"1P 3M 5P 7m 9m 13M\", null, \"13b9\"],\n  [\"1P 3M 5P 7m 9m 13m\", null, \"7b9b13\"],\n  [\"1P 3M 5P 7m 9m 9A\", null, \"7b9#9\"],\n  [\"1P 3M 5P 9M\", null, \"Madd9 2 add9 add2\"],\n  [\"1P 3M 5P 9m\", null, \"Maddb9\"],\n  [\"1P 3M 5d\", null, \"Mb5\"],\n  [\"1P 3M 5d 6M 7m 9M\", null, \"13b5\"],\n  [\"1P 3M 5d 7M\", null, \"M7b5\"],\n  [\"1P 3M 5d 7M 9M\", null, \"M9b5\"],\n  [\"1P 3M 5d 7m\", null, \"7b5\"],\n  [\"1P 3M 5d 7m 9M\", null, \"9b5\"],\n  [\"1P 3M 7m\", null, \"7no5\"],\n  [\"1P 3M 7m 13m\", null, \"7b13\"],\n  [\"1P 3M 7m 9M\", null, \"9no5\"],\n  [\"1P 3M 7m 9M 13M\", null, \"13no5\"],\n  [\"1P 3M 7m 9M 13m\", null, \"9b13\"],\n  [\"1P 3m 4P 5P\", null, \"madd4\"],\n  [\"1P 3m 5A\", null, \"m#5 m+ mb6\"],\n  [\"1P 3m 5P 6M 9M\", null, \"m69 _69\"],\n  [\"1P 3m 5P 6m 7M\", null, \"mMaj7b6\"],\n  [\"1P 3m 5P 6m 7M 9M\", null, \"mMaj9b6\"],\n  [\"1P 3m 5P 7M 9M\", null, \"mMaj9 -Maj9\"],\n  [\"1P 3m 5P 7m 11P\", null, \"m7add11 m7add4\"],\n  [\"1P 3m 5P 9M\", null, \"madd9\"],\n  [\"1P 3m 5d 6M 7M\", null, \"o7M7\"],\n  [\"1P 3m 5d 7M\", null, \"oM7\"],\n  [\"1P 3m 5d 7m\", null, \"m7b5 half-diminished h7 _7b5\"],\n  [\"1P 3m 6m 7M\", null, \"mb6M7\"],\n  [\"1P 3m 6m 7m\", null, \"m7#5\"],\n  [\"1P 3m 6m 7m 9M\", null, \"m9#5\"],\n  [\"1P 3m 6m 7m 9M 11P\", null, \"m11A\"],\n  [\"1P 3m 6m 9m\", null, \"mb6b9\"],\n  [\"1P 3m 7m 12d 2M\", null, \"m9b5 h9 -9b5\"],\n  [\"1P 3m 7m 12d 2M 4P\", null, \"m11b5 h11 _11b5\"],\n  [\"1P 4P 5A 7M\", null, \"M7#5sus4\"],\n  [\"1P 4P 5A 7M 9M\", null, \"M9#5sus4\"],\n  [\"1P 4P 5A 7m\", null, \"7#5sus4\"],\n  [\"1P 4P 5P 7M\", null, \"M7sus4\"],\n  [\"1P 4P 5P 7M 9M\", null, \"M9sus4\"],\n  [\"1P 4P 5P 7m 9M\", null, \"9sus4 9sus\"],\n  [\"1P 4P 5P 7m 9M 13M\", null, \"13sus4 13sus\"],\n  [\"1P 4P 5P 7m 9m 13m\", null, \"7sus4b9b13 7b9b13sus4\"],\n  [\"1P 4P 7m 10m\", null, \"4 quartal\"],\n  [\"1P 5P 7m 9m 11P\", null, \"11b9\"]\n];\n","/**\n * A collection of functions to create and manipulate music intervals.\n *\n * The intervals are strings in shorthand notation. Two variations are supported:\n *\n * - standard shorthand notation: type and number, for example: \"M3\", \"d-4\"\n * - inverse shorthand notation: number and then type, for example: \"3M\", \"-4d\"\n *\n * The problem with the standard shorthand notation is that some strings can be\n * parsed as notes or intervals, for example: \"A4\" can be note A in 4th octave\n * or an augmented four. To remove ambiguity, the prefered notation in tonal is the\n * inverse shortand notation.\n *\n * This is part of [tonal](https://www.npmjs.com/package/tonal) music theory library.\n *\n * ## Usage\n *\n * With Es6 modules:\n *\n * ```js\n * import Interval from \"tonal/interval\"\n * Interval.semitones(\"4P\") // => 5\n * Interval.invert(\"3m\") // => \"6M\"\n * Interval.simplify(\"9m\") // => \"2m\"\n * ```\n *\n * ES5 modules:\n *\n * ```js\n * const Tonal = require('tonal')\n * Tonal.Interval.semitones(\"4P\") // => 5\n * ```\n *\n * ## API\n *\n * @module Interval\n */\nexport default {\n  tokenize,\n  props,\n  simplify,\n  invert,\n  names,\n  num,\n  name,\n  fromProps,\n  chroma,\n  ic,\n  semitones,\n  fromSemitones\n};\n\n// shorthand tonal notation (with quality after number)\nconst IVL_TNL = \"([-+]?\\\\d+)(d{1,4}|m|M|P|A{1,4})\";\n// standard shorthand notation (with quality before number)\nconst IVL_STR = \"(AA|A|P|M|m|d|dd)([-+]?\\\\d+)\";\nconst REGEX = new RegExp(\"^\" + IVL_TNL + \"|\" + IVL_STR + \"$\");\nconst SIZES = [0, 2, 4, 5, 7, 9, 11];\nconst TYPES = \"PMMPPMM\";\nconst CLASSES = [0, 1, 2, 3, 4, 5, 6, 5, 4, 3, 2, 1];\nconst NAMES = \"1P 2m 2M 3m 3M 4P 5P 6m 6M 7m 7M 8P\".split(\" \");\n\n/**\n * List basic (perfect, major, minor) interval names within a octave\n * @param {string} qualities - (Optional, default \"PMm\") the valid types\n * @return {Array} the interval names\n * @example\n * Interval.names() // => [ \"1P\", \"2m\", \"2M\", \"3m\", \"3M\", \"4P\", \"5P\", \"6m\", \"6M\", \"7m\", \"7M\", \"8P\" ]\n * Interval.names(\"P\") // => [ \"1P\", \"4P\", \"5P\", \"8P\" ]\n * Interval.names(\"PM\") // => [ \"1P\", \"2M\", \"3M\", \"4P\", \"5P\", \"6M\", \"7M\", \"8P\" ]\n * Interval.names(\"Pm\") // => [ \"1P\", \"2m\", \"3m\", \"4P\", \"5P\", \"6m\", \"7m\", \"8P\" ]\n * Interval.names(\"d\") // => []\n */\nexport function names(types) {\n  return typeof types !== \"string\"\n    ? NAMES.slice()\n    : NAMES.filter(n => types.indexOf(n[1]) !== -1);\n}\n\n/**\n * Split a interval string into its parts\n *\n * It returns an array with the shape [number, type]\n * @param {string} interval - the interval string\n * @return {Array<String>}\n *\n * @example\n * Interval.tokenize(\"-2M\") //=> [\"-2\", \"M\"]\n */\nexport function tokenize(str) {\n  const m = REGEX.exec(str);\n  return m === null ? null : m[1] ? [m[1], m[2]] : [m[4], m[3]];\n}\n\nconst NO_IVL = Object.freeze({\n  name: null,\n  num: null,\n  q: null,\n  step: null,\n  alt: null,\n  dir: null,\n  type: null,\n  simple: null,\n  semitones: null,\n  chroma: null\n});\n\nconst fillStr = (s, n) => Array(Math.abs(n) + 1).join(s);\n\nconst qToAlt = (type, q) => {\n  if (q === \"M\" && type === \"M\") return 0;\n  if (q === \"P\" && type === \"P\") return 0;\n  if (q === \"m\" && type === \"M\") return -1;\n  if (/^A+$/.test(q)) return q.length;\n  if (/^d+$/.test(q)) return type === \"P\" ? -q.length : -q.length - 1;\n  return null;\n};\n\nconst altToQ = (type, alt) => {\n  if (alt === 0) return type === \"M\" ? \"M\" : \"P\";\n  else if (alt === -1 && type === \"M\") return \"m\";\n  else if (alt > 0) return fillStr(\"A\", alt);\n  else if (alt < 0) return fillStr(\"d\", type === \"P\" ? alt : alt + 1);\n  else return null;\n};\n\nconst numToStep = num => (Math.abs(num) - 1) % 7;\n\nconst properties = str => {\n  const t = tokenize(str);\n  if (t === null) return NO_IVL;\n  const p = { num: +t[0], q: t[1] };\n  p.step = numToStep(p.num);\n  p.type = TYPES[p.step];\n  if (p.type === \"M\" && p.q === \"P\") return NO_IVL;\n\n  p.name = \"\" + p.num + p.q;\n  p.dir = p.num < 0 ? -1 : 1;\n  p.simple = p.num === 8 || p.num === -8 ? p.num : p.dir * (p.step + 1);\n  p.alt = qToAlt(p.type, p.q);\n  p.oct = Math.floor((Math.abs(p.num) - 1) / 7);\n  p.semitones = p.dir * (SIZES[p.step] + p.alt + 12 * p.oct);\n  p.chroma = (((p.dir * (SIZES[p.step] + p.alt)) % 12) + 12) % 12;\n  return Object.freeze(p);\n};\n\nconst cache = {};\n/**\n * Get interval properties. It returns an object with:\n *\n * - name: name\n * - num: number\n * - q: quality\n * - step: step\n * - alt: alteration\n * - dir: direction (1 ascending, -1 descending)\n * - type: \"P\" or \"M\" for perfectable or majorable\n * - simple: the simplified number\n * - semitones: the size in semitones\n * - chroma: the interval chroma\n * - ic: the interval class\n *\n * @function\n * @param {string} interval - the interval\n * @return {Object} the interval in the form [number, alt]\n */\nexport function props(str) {\n  if (typeof str !== \"string\") return NO_IVL;\n  return cache[str] || (cache[str] = properties(str));\n}\n\n/**\n * Get the number of the interval\n *\n * @function\n * @param {string} interval - the interval\n * @return {Integer}\n * @example\n * Interval.num(\"m2\") // => 2\n * Interval.num(\"P9\") // => 9\n * Interval.num(\"P-4\") // => -4\n */\nexport function num(str) {\n  return props(str).num;\n}\n\n/**\n * Get interval name. Can be used to test if it\"s an interval. It accepts intervals\n * as pitch or string in shorthand notation or tonal notation. It returns always\n * intervals in tonal notation.\n *\n * @function\n * @param {string} interval - the interval string or array\n * @return {string} the interval name or null if not valid interval\n * @example\n * Interval.name(\"m-3\") // => \"-3m\"\n * Interval.name(\"3\") // => null\n */\nexport function name(str) {\n  return props(str).name;\n}\n\n/**\n * Get size in semitones of an interval\n *\n * @function\n * @param {string} ivl\n * @return {Integer} the number of semitones or null if not an interval\n * @example\n * import { semitones } from \"tonal-interval\"\n * semitones(\"P4\") // => 5\n * // or using tonal\n * Tonal.Interval.semitones(\"P5\") // => 7\n */\nexport function semitones(str) {\n  return props(str).semitones;\n}\n\n/**\n * Get the chroma of the interval. The chroma is a number between 0 and 7\n * that represents the position within an octave (pitch set)\n *\n * @function\n * @param {string} str\n * @return {number}\n */\nexport function chroma(str) {\n  return props(str).chroma;\n}\n\n/**\n * Get the [interval class](https://en.wikipedia.org/wiki/Interval_class)\n * number of a given interval.\n *\n * In musical set theory, an interval class is the shortest distance in\n * pitch class space between two unordered pitch classes\n *\n * @function\n * @param {String|Integer} interval - the interval or the number of semitones\n * @return {Integer} A value between 0 and 6\n *\n * @example\n * Interval.ic(\"P8\") // => 0\n * Interval.ic(\"m6\") // => 4\n * Interval.ic(10) // => 2\n * [\"P1\", \"M2\", \"M3\", \"P4\", \"P5\", \"M6\", \"M7\"].map(ic) // => [0, 2, 4, 5, 5, 3, 1]\n */\nexport function ic(ivl) {\n  if (typeof ivl === \"string\") ivl = props(ivl).chroma;\n  return typeof ivl === \"number\" ? CLASSES[ivl % 12] : null;\n}\n\n/**\n * Given a interval props object, get the interval name\n *\n * The properties must contain a `num` *or* `step`, and `alt`:\n *\n * - num: the interval number\n * - step: the interval step (overrides the num property)\n * - alt: the interval alteration\n * - oct: (Optional) the number of octaves\n * - dir: (Optional) the direction\n *\n * @function\n * @param {Object} props - the interval property object\n *\n * @return {string} the interval name\n * @example\n * Interval.fromProps({ step: 1, alt: -1, oct: 0, dir: 1 }) // => \"1d\"\n * Interval.fromProps({ num: 9, alt: -1 }) // => \"9m\"\n */\nexport function fromProps({ num, step, alt, oct = 1, dir } = {}) {\n  if (step !== undefined) num = step + 1 + 7 * oct;\n  if (num === undefined) return null;\n\n  const d = dir < 0 ? \"-\" : \"\";\n  const type = TYPES[numToStep(num)];\n  return d + num + altToQ(type, alt);\n}\n\n/**\n * Get the simplified version of an interval.\n *\n * @function\n * @param {string} interval - the interval to simplify\n * @return {string} the simplified interval\n *\n * @example\n * Interval.simplify(\"9M\") // => \"2M\"\n * [\"8P\", \"9M\", \"10M\", \"11P\", \"12P\", \"13M\", \"14M\", \"15P\"].map(Interval.simplify)\n * // => [ \"8P\", \"2M\", \"3M\", \"4P\", \"5P\", \"6M\", \"7M\", \"8P\" ]\n * Interval.simplify(\"2M\") // => \"2M\"\n * Interval.simplify(\"-2M\") // => \"7m\"\n */\nexport function simplify(str) {\n  const p = props(str);\n  if (p === NO_IVL) return null;\n  return p.simple + p.q;\n}\n\n/**\n * Get the inversion (https://en.wikipedia.org/wiki/Inversion_(music)#Intervals)\n * of an interval.\n *\n * @function\n * @param {string} interval - the interval to invert in interval shorthand\n * notation or interval array notation\n * @return {string} the inverted interval\n *\n * @example\n * Interval.invert(\"3m\") // => \"6M\"\n * Interval.invert(\"2M\") // => \"7m\"\n */\nexport function invert(str) {\n  const p = props(str);\n  if (p === NO_IVL) return null;\n  const step = (7 - p.step) % 7;\n  const alt = p.type === \"P\" ? -p.alt : -(p.alt + 1);\n  return fromProps({ step, alt, oct: p.oct, dir: p.dir });\n}\n\n// interval numbers\nvar IN = [1, 2, 2, 3, 3, 4, 5, 5, 6, 6, 7, 7];\n// interval qualities\nvar IQ = \"P m M m M P d P m M m M\".split(\" \");\n\n/**\n * Get interval name from semitones number. Since there are several interval\n * names for the same number, the name it\"s arbitraty, but deterministic.\n *\n * @function\n * @param {Integer} num - the number of semitones (can be negative)\n * @return {string} the interval name\n * @example\n * import { fromSemitones } from \"tonal-interval\"\n * fromSemitones(7) // => \"5P\"\n * // or using tonal\n * Tonal.Distance.fromSemitones(-7) // => \"-5P\"\n */\nexport function fromSemitones(num) {\n  var d = num < 0 ? -1 : 1;\n  var n = Math.abs(num);\n  var c = n % 12;\n  var o = Math.floor(n / 12);\n  return d * (IN[c] + 7 * o) + IQ[c];\n}\n","import { props, name } from \"../note\";\nconst isArray = Array.isArray;\n\n/**\n * Tonal array utilities. Sort notes by pitch, remove duplicates,\n * create ranges with notes or numbers.\n *\n * ## Usage\n *\n * @example\n * import Array from 'tonal/array';\n * Array.sort([\"f\", \"a\", \"c\"])\n *\n * @example\n * const Tonal = require(\"tonal\")\n * Tonal.Array.range(1, 4)\n *\n * ## API\n *\n * @module Array\n */\nexport default {\n  range,\n  rotate,\n  compact,\n  sort,\n  sortedUniq,\n  shuffle,\n  permutations\n};\n\n// ascending range\nfunction ascR(b, n) {\n  const a = [];\n  for (; n--; a[n] = n + b);\n  return a;\n}\n// descending range\nfunction descR(b, n) {\n  const a = [];\n  for (; n--; a[n] = b - n);\n  return a;\n}\n\n/**\n * Assert the value is an array\n * @private\n */\nexport function assert(array, msg = \"Must be an array.\") {\n  if (!isArray(array)) throw Error(msg + \" Was: \" + array);\n}\n\n/**\n * Create a numeric range\n *\n * @param {number} from\n * @param {number} to\n * @return {Array<number>}\n *\n * @example\n * Array.range(-2, 2) // => [-2, -1, 0, 1, 2]\n * Array.range(2, -2) // => [2, 1, 0, -1, -2]\n */\nexport function range(a, b) {\n  return a === null || b === null\n    ? []\n    : a < b\n    ? ascR(a, b - a + 1)\n    : descR(a, a - b + 1);\n}\n\n/**\n *\n * Rotates a list a number of times. It\"s completly agnostic about the\n * contents of the list.\n *\n * @param {Integer} times - the number of rotations\n * @param {Array} array\n * @return {Array} the rotated array\n *\n * @example\n * Array.rotate(1, [1, 2, 3]) // => [2, 3, 1]\n */\nexport function rotate(times, arr) {\n  const len = arr.length;\n  const n = ((times % len) + len) % len;\n  return arr.slice(n, len).concat(arr.slice(0, n));\n}\n\n/**\n * Return a copy of the array with the null values removed\n * @function\n * @param {Array} array\n * @return {Array}\n *\n * @example\n * Array.compact([\"a\", \"b\", null, \"c\"]) // => [\"a\", \"b\", \"c\"]\n */\nexport function compact(arr) {\n  return arr.filter(n => n === 0 || n);\n}\n\n// a function that get note heights (with negative number for pitch classes)\nconst height = name => {\n  const m = props(name).midi;\n  return m !== null ? m : props(name + \"-100\").midi;\n};\n\n/**\n * Sort an array of notes in ascending order. Pitch classes are listed\n * before notes. Any string that is not a note is removed.\n *\n * @param {Array<string>} notes\n * @return {Array<string>} sorted array of notes\n *\n * @example\n * Array.sort(['c2', 'c5', 'c1', 'c0', 'c6', 'c'])\n * // => ['C', 'C0', 'C1', 'C2', 'C5', 'C6']\n * Array.sort(['c', 'F', 'G', 'a', 'b', 'h', 'J'])\n * // => ['C', 'F', 'G', 'A', 'B']\n */\nexport function sort(src) {\n  return compact(src.map(name)).sort((a, b) => height(a) > height(b));\n}\n\n/**\n * Get sorted notes with duplicates removed. Pitch classes are listed\n * before notes.\n *\n * @function\n * @param {Array<string>} array\n * @return {Array<string>} unique sorted notes\n *\n * @example\n * Array.sortedUniq(['a', 'b', 'c2', '1p', 'p2', 'c2', 'b', 'c', 'c3' ])\n * // => [ 'C', 'A', 'B', 'C2', 'C3' ]\n */\nexport function sortedUniq(arr) {\n  return sort(arr).filter((n, i, a) => i === 0 || n !== a[i - 1]);\n}\n\n/**\n * Randomizes the order of the specified array in-place, using the Fisher–Yates shuffle.\n *\n * @function\n * @param {Array} array\n * @return {Array} the array shuffled\n *\n * @example\n * Array.shuffle([\"C\", \"D\", \"E\", \"F\"]) // => [...]\n */\nexport function shuffle(arr, rnd = Math.random) {\n  let i, t;\n  let m = arr.length;\n  while (m) {\n    i = (rnd() * m--) | 0;\n    t = arr[m];\n    arr[m] = arr[i];\n    arr[i] = t;\n  }\n  return arr;\n}\n\n/**\n * Get all permutations of an array\n * http://stackoverflow.com/questions/9960908/permutations-in-javascript\n *\n * @param {Array} array - the array\n * @return {Array<Array>} an array with all the permutations\n * @example\n * Array.permutations([\"a\", \"b\", \"c\"])) // =>\n * [\n *   [\"a\", \"b\", \"c\"],\n *   [\"b\", \"a\", \"c\"],\n *   [\"b\", \"c\", \"a\"],\n *   [\"a\", \"c\", \"b\"],\n *   [\"c\", \"a\", \"b\"],\n *   [\"c\", \"b\", \"a\"]\n * ]\n *\n */\nexport function permutations(arr) {\n  if (arr.length === 0) return [[]];\n  return permutations(arr.slice(1)).reduce(function(acc, perm) {\n    return acc.concat(\n      arr.map(function(e, pos) {\n        const newPerm = perm.slice();\n        newPerm.splice(pos, 0, arr[0]);\n        return newPerm;\n      })\n    );\n  }, []);\n}\n","import { chroma as noteChroma } from \"../note\";\nimport { chroma as ivlChroma } from \"../interval\";\nimport { rotate, range, compact, assert } from \"../array\";\n\n/**\n *\n * `tonal/pcset` is a collection of functions to work with pitchclass sets.\n * It has methods to compare pitch class sets and to work with pitch class set chromas\n *\n *\n * ## Usage\n *\n * @example\n * import Pcset from \"tonal/pcset\"\n * Pcset.isEqual(\"c2 d5 e6\", \"c6 e3 d1\") // => true\n *\n * @example\n * const Tonal = require('tonal')\n * Tonal.Pcset.chroma(['C', 'D', 'E']) // => \"101010000000\"\n *\n * ## API\n *\n * @module Pcset\n */\nexport default {\n  chroma,\n  chromas,\n  isChroma,\n  intervals,\n  isSubsetOf,\n  isSupersetOf,\n  isEqual,\n  modes,\n  includes,\n  filter\n};\n\nconst pcsetNum = set => parseInt(chroma(set), 2);\nconst numNotes = chroma => chroma.replace(/0/g, \"\").length;\n\n/**\n * Get chroma of a pitch class set. A chroma identifies each set uniquely.\n * It\"s a 12-digit binary each presenting one semitone of the octave.\n *\n * Note that this function accepts a chroma as parameter and return it\n * without modification.\n *\n * @param {Array<string>} set - the pitch class set\n * @return {string} a binary representation of the pitch class set or null\n * @example\n * Pcset.chroma([\"C\", \"D\", \"E\"]) // => \"1010100000000\"\n */\nexport function chroma(set) {\n  if (isChroma(set)) return set;\n  assert(set);\n  let ch, note;\n  const binary = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  for (let i = 0; i < set.length; i++) {\n    note = set[i];\n    ch = noteChroma(note);\n    if (ch === null) ch = ivlChroma(set[i]);\n    if (ch === null) return null;\n    binary[ch] = 1;\n  }\n  return binary.join(\"\");\n}\n\nlet all = null;\n/**\n * Get a list of all possible chromas (all possible scales)\n * More information: http://allthescales.org/\n * @param [number] numberOfNotes - number of notes of the given chromas. Any by default\n * @return {Array<string>} an array of possible chromas from '10000000000' to '11111111111'\n *\n */\nexport function chromas(n) {\n  all = all || range(2048, 4095).map(n => n.toString(2));\n  return typeof n === \"number\"\n    ? all.filter(chroma => numNotes(chroma) === n)\n    : all.slice();\n}\n\n/**\n * Given a a list of notes or a pcset chroma, produce the rotations\n * of the chroma discarding the ones that starts with \"0\"\n *\n * This is used, for example, to get all the modes of a scale.\n *\n * @param {Array|string} set - the list of notes or pitchChr of the set\n * @param {boolean} normalize - (Optional, true by default) remove all\n * the rotations that starts with \"0\"\n * @return {Array<string>} an array with all the modes of the chroma\n *\n * @example\n * Pcset.modes([\"C\", \"D\", \"E\"]).map(Pcset.intervals)\n */\nexport function modes(set, normalize) {\n  normalize = normalize !== false;\n  const binary = (chroma(set) || \"\").split(\"\");\n  return compact(\n    binary.map(function(_, i) {\n      const r = rotate(i, binary);\n      return normalize && r[0] === \"0\" ? null : r.join(\"\");\n    })\n  );\n}\n\nconst REGEX = /^[01]{12}$/;\n/**\n * Test if the given string is a pitch class set chroma.\n * @param {string} chroma - the pitch class set chroma\n * @return {boolean} true if its a valid pcset chroma\n * @example\n * Pcset.isChroma(\"101010101010\") // => true\n * Pcset.isChroma(\"101001\") // => false\n */\nexport function isChroma(set) {\n  return REGEX.test(set);\n}\n\nconst IVLS = \"1P 2m 2M 3m 3M 4P 5d 5P 6m 6M 7m 7M\".split(\" \");\n/**\n * Given a pcset (notes or chroma) return it\"s intervals\n * @param {string|Array} pcset - the pitch class set (notes or chroma)\n * @return {Array} intervals or empty array if not valid pcset\n * @example\n * Pcset.intervals(\"1010100000000\") => [\"1P\", \"2M\", \"3M\"]\n */\nexport function intervals(set) {\n  if (!isChroma(set)) return [];\n  return compact(\n    set.split(\"\").map(function(d, i) {\n      return d === \"1\" ? IVLS[i] : null;\n    })\n  );\n}\n\n/**\n * Test if two pitch class sets are identical\n *\n * @param {Array|string} set1 - one of the pitch class sets\n * @param {Array|string} set2 - the other pitch class set\n * @return {boolean} true if they are equal\n * @example\n * Pcset.isEqual([\"c2\", \"d3\"], [\"c5\", \"d2\"]) // => true\n */\nexport function isEqual(s1, s2) {\n  if (arguments.length === 1) return s => isEqual(s1, s);\n  return chroma(s1) === chroma(s2);\n}\n\n/**\n * Create a function that test if a collection of notes is a\n * subset of a given set\n *\n * The function can be partially applied\n *\n * @param {Array|string} set - an array of notes or a chroma set string to test against\n * @param {Array|string} notes - an array of notes or a chroma set\n * @return {boolean} true if notes is a subset of set, false otherwise\n * @example\n * const inCMajor = Pcset.isSubsetOf([\"C\", \"E\", \"G\"])\n * inCMajor([\"e6\", \"c4\"]) // => true\n * inCMajor([\"e6\", \"c4\", \"d3\"]) // => false\n */\nexport function isSubsetOf(set, notes) {\n  if (arguments.length > 1) return isSubsetOf(set)(notes);\n  set = pcsetNum(set);\n  return function(notes) {\n    notes = pcsetNum(notes);\n    return notes !== set && (notes & set) === notes;\n  };\n}\n\n/**\n * Create a function that test if a collectio of notes is a\n * superset of a given set (it contains all notes and at least one more)\n *\n * @param {Array|string} set - an array of notes or a chroma set string to test against\n * @param {Array|string} notes - an array of notes or a chroma set\n * @return {boolean} true if notes is a superset of set, false otherwise\n * @example\n * const extendsCMajor = Pcset.isSupersetOf([\"C\", \"E\", \"G\"])\n * extendsCMajor([\"e6\", \"a\", \"c4\", \"g2\"]) // => true\n * extendsCMajor([\"c6\", \"e4\", \"g3\"]) // => false\n */\nexport function isSupersetOf(set, notes) {\n  if (arguments.length > 1) return isSupersetOf(set)(notes);\n  set = pcsetNum(set);\n  return function(notes) {\n    notes = pcsetNum(notes);\n    return notes !== set && (notes | set) === notes;\n  };\n}\n\n/**\n * Test if a given pitch class set includes a note\n *\n * @param {Array<string>} set - the base set to test against\n * @param {string} note - the note to test\n * @return {boolean} true if the note is included in the pcset\n *\n * Can be partially applied\n *\n * @example\n * Pcset.includes([\"C\", \"D\", \"E\"], \"C4\") // => true\n * Pcset.includes([\"C\", \"D\", \"E\"], \"C#4\") // => false\n */\nexport function includes(set, note) {\n  if (arguments.length > 1) return includes(set)(note);\n  set = chroma(set);\n  return note => set[noteChroma(note)] === \"1\";\n}\n\n/**\n * Filter a list with a pitch class set\n *\n * @param {Array|string} set - the pitch class set notes\n * @param {Array|string} notes - the note list to be filtered\n * @return {Array} the filtered notes\n *\n * @example\n * Pcset.filter([\"C\", \"D\", \"E\"], [\"c2\", \"c#2\", \"d2\", \"c3\", \"c#3\", \"d3\"]) // => [ \"c2\", \"d2\", \"c3\", \"d3\" ])\n * Pcset.filter([\"C2\"], [\"c2\", \"c#2\", \"d2\", \"c3\", \"c#3\", \"d3\"]) // => [ \"c2\", \"c3\" ])\n */\nexport function filter(set, notes) {\n  if (arguments.length === 1) return n => filter(set, n);\n  return notes.filter(includes(set));\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","import Promise from './rsvp/promise';\nimport EventTarget from './rsvp/events';\nimport denodeify from './rsvp/node';\nimport all from './rsvp/all';\nimport allSettled from './rsvp/all-settled';\nimport race from './rsvp/race';\nimport hash from './rsvp/hash';\nimport hashSettled from './rsvp/hash-settled';\nimport rethrow from './rsvp/rethrow';\nimport defer from './rsvp/defer';\nimport { config, configure } from './rsvp/config';\nimport map from './rsvp/map';\nimport resolve from './rsvp/resolve';\nimport reject from './rsvp/reject';\nimport filter from './rsvp/filter';\nimport asap from './rsvp/asap';\n\n// defaults\nconfig.async = asap;\nconfig.after = function (cb) {\n  return setTimeout(cb, 0);\n};\nvar cast = resolve;\n\nvar async = function (callback, arg) {\n  return config.async(callback, arg);\n};\n\nfunction on() {\n  config.on.apply(config, arguments);\n}\n\nfunction off() {\n  config.off.apply(config, arguments);\n}\n\n// Set up instrumentation through `window.__PROMISE_INTRUMENTATION__`\nif (typeof window !== 'undefined' && typeof window['__PROMISE_INSTRUMENTATION__'] === 'object') {\n  var callbacks = window['__PROMISE_INSTRUMENTATION__'];\n  configure('instrument', true);\n  for (var eventName in callbacks) {\n    if (callbacks.hasOwnProperty(eventName)) {\n      on(eventName, callbacks[eventName]);\n    }\n  }\n}\n\n// the default export here is for backwards compat:\n//   https://github.com/tildeio/rsvp.js/issues/434\nexport default {\n  asap: asap,\n  cast: cast,\n  Promise: Promise,\n  EventTarget: EventTarget,\n  all: all,\n  allSettled: allSettled,\n  race: race,\n  hash: hash,\n  hashSettled: hashSettled,\n  rethrow: rethrow,\n  defer: defer,\n  denodeify: denodeify,\n  configure: configure,\n  on: on,\n  off: off,\n  resolve: resolve,\n  reject: reject,\n  map: map,\n  async: async,\n  filter: filter\n};\n\nexport { asap, cast, Promise, EventTarget, all, allSettled, race, hash, hashSettled, rethrow, defer, denodeify, configure, on, off, resolve, reject, map, async, filter };","\nfunction callbacksFor(object) {\n  var callbacks = object._promiseCallbacks;\n\n  if (!callbacks) {\n    callbacks = object._promiseCallbacks = {};\n  }\n\n  return callbacks;\n}\n\n/**\n  @class EventTarget\n  @for rsvp\n  @public\n*/\nexport default {\n\n  /**\n    `EventTarget.mixin` extends an object with EventTarget methods. For\n    Example:\n     ```javascript\n    import EventTarget from 'rsvp';\n     let object = {};\n     EventTarget.mixin(object);\n     object.on('finished', function(event) {\n      // handle event\n    });\n     object.trigger('finished', { detail: value });\n    ```\n     `EventTarget.mixin` also works with prototypes:\n     ```javascript\n    import EventTarget from 'rsvp';\n     let Person = function() {};\n    EventTarget.mixin(Person.prototype);\n     let yehuda = new Person();\n    let tom = new Person();\n     yehuda.on('poke', function(event) {\n      console.log('Yehuda says OW');\n    });\n     tom.on('poke', function(event) {\n      console.log('Tom says OW');\n    });\n     yehuda.trigger('poke');\n    tom.trigger('poke');\n    ```\n     @method mixin\n    @for rsvp\n    @private\n    @param {Object} object object to extend with EventTarget methods\n  */\n  mixin: function (object) {\n    object.on = this.on;\n    object.off = this.off;\n    object.trigger = this.trigger;\n    object._promiseCallbacks = undefined;\n    return object;\n  },\n\n\n  /**\n    Registers a callback to be executed when `eventName` is triggered\n     ```javascript\n    object.on('event', function(eventInfo){\n      // handle the event\n    });\n     object.trigger('event');\n    ```\n     @method on\n    @for EventTarget\n    @private\n    @param {String} eventName name of the event to listen for\n    @param {Function} callback function to be called when the event is triggered.\n  */\n  on: function (eventName, callback) {\n    if (typeof callback !== 'function') {\n      throw new TypeError('Callback must be a function');\n    }\n\n    var allCallbacks = callbacksFor(this);\n    var callbacks = allCallbacks[eventName];\n\n    if (!callbacks) {\n      callbacks = allCallbacks[eventName] = [];\n    }\n\n    if (callbacks.indexOf(callback) === -1) {\n      callbacks.push(callback);\n    }\n  },\n\n\n  /**\n    You can use `off` to stop firing a particular callback for an event:\n     ```javascript\n    function doStuff() { // do stuff! }\n    object.on('stuff', doStuff);\n     object.trigger('stuff'); // doStuff will be called\n     // Unregister ONLY the doStuff callback\n    object.off('stuff', doStuff);\n    object.trigger('stuff'); // doStuff will NOT be called\n    ```\n     If you don't pass a `callback` argument to `off`, ALL callbacks for the\n    event will not be executed when the event fires. For example:\n     ```javascript\n    let callback1 = function(){};\n    let callback2 = function(){};\n     object.on('stuff', callback1);\n    object.on('stuff', callback2);\n     object.trigger('stuff'); // callback1 and callback2 will be executed.\n     object.off('stuff');\n    object.trigger('stuff'); // callback1 and callback2 will not be executed!\n    ```\n     @method off\n    @for rsvp\n    @private\n    @param {String} eventName event to stop listening to\n    @param {Function} [callback] optional argument. If given, only the function\n    given will be removed from the event's callback queue. If no `callback`\n    argument is given, all callbacks will be removed from the event's callback\n    queue.\n  */\n  off: function (eventName, callback) {\n    var allCallbacks = callbacksFor(this);\n\n    if (!callback) {\n      allCallbacks[eventName] = [];\n      return;\n    }\n\n    var callbacks = allCallbacks[eventName];\n    var index = callbacks.indexOf(callback);\n\n    if (index !== -1) {\n      callbacks.splice(index, 1);\n    }\n  },\n\n\n  /**\n    Use `trigger` to fire custom events. For example:\n     ```javascript\n    object.on('foo', function(){\n      console.log('foo event happened!');\n    });\n    object.trigger('foo');\n    // 'foo event happened!' logged to the console\n    ```\n     You can also pass a value as a second argument to `trigger` that will be\n    passed as an argument to all event listeners for the event:\n     ```javascript\n    object.on('foo', function(value){\n      console.log(value.name);\n    });\n     object.trigger('foo', { name: 'bar' });\n    // 'bar' logged to the console\n    ```\n     @method trigger\n    @for rsvp\n    @private\n    @param {String} eventName name of the event to be triggered\n    @param {*} [options] optional value to be passed to any event handlers for\n    the given `eventName`\n  */\n  trigger: function (eventName, options, label) {\n    var allCallbacks = callbacksFor(this);\n\n    var callbacks = allCallbacks[eventName];\n    if (callbacks) {\n      // Don't cache the callbacks.length since it may grow\n      var callback = void 0;\n      for (var i = 0; i < callbacks.length; i++) {\n        callback = callbacks[i];\n        callback(options, label);\n      }\n    }\n  }\n};","import EventTarget from './events';\n\nvar config = {\n  instrument: false\n};\n\nEventTarget['mixin'](config);\n\nfunction configure(name, value) {\n  if (arguments.length === 2) {\n    config[name] = value;\n  } else {\n    return config[name];\n  }\n}\n\nexport { config, configure };","import { config } from './config';\n\nvar queue = [];\n\nfunction scheduleFlush() {\n  setTimeout(function () {\n    for (var i = 0; i < queue.length; i++) {\n      var entry = queue[i];\n\n      var payload = entry.payload;\n\n      payload.guid = payload.key + payload.id;\n      payload.childGuid = payload.key + payload.childId;\n      if (payload.error) {\n        payload.stack = payload.error.stack;\n      }\n\n      config['trigger'](entry.name, entry.payload);\n    }\n    queue.length = 0;\n  }, 50);\n}\n\nexport default function instrument(eventName, promise, child) {\n  if (1 === queue.push({\n    name: eventName,\n    payload: {\n      key: promise._guidKey,\n      id: promise._id,\n      eventName: eventName,\n      detail: promise._result,\n      childId: child && child._id,\n      label: promise._label,\n      timeStamp: Date.now(),\n      error: config[\"instrument-with-stack\"] ? new Error(promise._label) : null\n    } })) {\n    scheduleFlush();\n  }\n}","import { noop, resolve as _resolve } from '../-internal';\n\n/**\n  `Promise.resolve` returns a promise that will become resolved with the\n  passed `value`. It is shorthand for the following:\n\n  ```javascript\n  import Promise from 'rsvp';\n\n  let promise = new Promise(function(resolve, reject){\n    resolve(1);\n  });\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  import Promise from 'rsvp';\n\n  let promise = RSVP.Promise.resolve(1);\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  @method resolve\n  @for Promise\n  @static\n  @param {*} object value that the returned promise will be resolved with\n  @param {String} [label] optional string for identifying the returned promise.\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nexport default function resolve(object, label) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (object && typeof object === 'object' && object.constructor === Constructor) {\n    return object;\n  }\n\n  var promise = new Constructor(noop, label);\n  _resolve(promise, object);\n  return promise;\n}","import originalThen from './then';\nimport originalResolve from './promise/resolve';\nimport instrument from './instrument';\n\nimport { config } from './config';\nimport Promise from './promise';\n\nfunction withOwnPromise() {\n  return new TypeError('A promises callback cannot return that same promise.');\n}\n\nfunction objectOrFunction(x) {\n  var type = typeof x;\n  return x !== null && (type === 'object' || type === 'function');\n}\n\nexport function noop() {}\n\nexport var PENDING = void 0;\nexport var FULFILLED = 1;\nexport var REJECTED = 2;\n\nexport var TRY_CATCH_ERROR = { error: null };\n\nexport function getThen(promise) {\n  try {\n    return promise.then;\n  } catch (error) {\n    TRY_CATCH_ERROR.error = error;\n    return TRY_CATCH_ERROR;\n  }\n}\n\nvar tryCatchCallback = void 0;\nfunction tryCatcher() {\n  try {\n    var target = tryCatchCallback;\n    tryCatchCallback = null;\n    return target.apply(this, arguments);\n  } catch (e) {\n    TRY_CATCH_ERROR.error = e;\n    return TRY_CATCH_ERROR;\n  }\n}\n\nexport function tryCatch(fn) {\n  tryCatchCallback = fn;\n  return tryCatcher;\n}\n\nfunction handleForeignThenable(promise, thenable, then) {\n  config.async(function (promise) {\n    var sealed = false;\n    var result = tryCatch(then).call(thenable, function (value) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n      if (thenable === value) {\n        fulfill(promise, value);\n      } else {\n        resolve(promise, value);\n      }\n    }, function (reason) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n\n      reject(promise, reason);\n    }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n    if (!sealed && result === TRY_CATCH_ERROR) {\n      sealed = true;\n      var error = TRY_CATCH_ERROR.error;\n      TRY_CATCH_ERROR.error = null;\n      reject(promise, error);\n    }\n  }, promise);\n}\n\nfunction handleOwnThenable(promise, thenable) {\n  if (thenable._state === FULFILLED) {\n    fulfill(promise, thenable._result);\n  } else if (thenable._state === REJECTED) {\n    thenable._onError = null;\n    reject(promise, thenable._result);\n  } else {\n    subscribe(thenable, undefined, function (value) {\n      if (thenable === value) {\n        fulfill(promise, value);\n      } else {\n        resolve(promise, value);\n      }\n    }, function (reason) {\n      return reject(promise, reason);\n    });\n  }\n}\n\nexport function handleMaybeThenable(promise, maybeThenable, then) {\n  var isOwnThenable = maybeThenable.constructor === promise.constructor && then === originalThen && promise.constructor.resolve === originalResolve;\n\n  if (isOwnThenable) {\n    handleOwnThenable(promise, maybeThenable);\n  } else if (then === TRY_CATCH_ERROR) {\n    var error = TRY_CATCH_ERROR.error;\n    TRY_CATCH_ERROR.error = null;\n    reject(promise, error);\n  } else if (typeof then === 'function') {\n    handleForeignThenable(promise, maybeThenable, then);\n  } else {\n    fulfill(promise, maybeThenable);\n  }\n}\n\nexport function resolve(promise, value) {\n  if (promise === value) {\n    fulfill(promise, value);\n  } else if (objectOrFunction(value)) {\n    handleMaybeThenable(promise, value, getThen(value));\n  } else {\n    fulfill(promise, value);\n  }\n}\n\nexport function publishRejection(promise) {\n  if (promise._onError) {\n    promise._onError(promise._result);\n  }\n\n  publish(promise);\n}\n\nexport function fulfill(promise, value) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n\n  promise._result = value;\n  promise._state = FULFILLED;\n\n  if (promise._subscribers.length === 0) {\n    if (config.instrument) {\n      instrument('fulfilled', promise);\n    }\n  } else {\n    config.async(publish, promise);\n  }\n}\n\nexport function reject(promise, reason) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n  promise._state = REJECTED;\n  promise._result = reason;\n  config.async(publishRejection, promise);\n}\n\nexport function subscribe(parent, child, onFulfillment, onRejection) {\n  var subscribers = parent._subscribers;\n  var length = subscribers.length;\n\n  parent._onError = null;\n\n  subscribers[length] = child;\n  subscribers[length + FULFILLED] = onFulfillment;\n  subscribers[length + REJECTED] = onRejection;\n\n  if (length === 0 && parent._state) {\n    config.async(publish, parent);\n  }\n}\n\nexport function publish(promise) {\n  var subscribers = promise._subscribers;\n  var settled = promise._state;\n\n  if (config.instrument) {\n    instrument(settled === FULFILLED ? 'fulfilled' : 'rejected', promise);\n  }\n\n  if (subscribers.length === 0) {\n    return;\n  }\n\n  var child = void 0,\n      callback = void 0,\n      result = promise._result;\n\n  for (var i = 0; i < subscribers.length; i += 3) {\n    child = subscribers[i];\n    callback = subscribers[i + settled];\n\n    if (child) {\n      invokeCallback(settled, child, callback, result);\n    } else {\n      callback(result);\n    }\n  }\n\n  promise._subscribers.length = 0;\n}\n\nexport function invokeCallback(state, promise, callback, result) {\n  var hasCallback = typeof callback === 'function';\n  var value = void 0;\n\n  if (hasCallback) {\n    value = tryCatch(callback)(result);\n  } else {\n    value = result;\n  }\n\n  if (promise._state !== PENDING) {\n    // noop\n  } else if (value === promise) {\n    reject(promise, withOwnPromise());\n  } else if (value === TRY_CATCH_ERROR) {\n    var error = TRY_CATCH_ERROR.error;\n    TRY_CATCH_ERROR.error = null; // release\n    reject(promise, error);\n  } else if (hasCallback) {\n    resolve(promise, value);\n  } else if (state === FULFILLED) {\n    fulfill(promise, value);\n  } else if (state === REJECTED) {\n    reject(promise, value);\n  }\n}\n\nexport function initializePromise(promise, resolver) {\n  var resolved = false;\n  try {\n    resolver(function (value) {\n      if (resolved) {\n        return;\n      }\n      resolved = true;\n      resolve(promise, value);\n    }, function (reason) {\n      if (resolved) {\n        return;\n      }\n      resolved = true;\n      reject(promise, reason);\n    });\n  } catch (e) {\n    reject(promise, e);\n  }\n}","import { config } from './config';\nimport instrument from './instrument';\nimport { noop, subscribe, FULFILLED, REJECTED, PENDING, invokeCallback } from './-internal';\n\nexport default function then(onFulfillment, onRejection, label) {\n  var parent = this;\n  var state = parent._state;\n\n  if (state === FULFILLED && !onFulfillment || state === REJECTED && !onRejection) {\n    config.instrument && instrument('chained', parent, parent);\n    return parent;\n  }\n\n  parent._onError = null;\n\n  var child = new parent.constructor(noop, label);\n  var result = parent._result;\n\n  config.instrument && instrument('chained', parent, child);\n\n  if (state === PENDING) {\n    subscribe(parent, child, onFulfillment, onRejection);\n  } else {\n    var callback = state === FULFILLED ? onFulfillment : onRejection;\n    config.async(function () {\n      return invokeCallback(state, child, callback, result);\n    });\n  }\n\n  return child;\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport { noop, resolve, handleMaybeThenable, reject, fulfill, subscribe, FULFILLED, REJECTED, PENDING, getThen } from './-internal';\n\nimport { default as OwnPromise } from './promise';\nimport ownThen from './then';\nimport ownResolve from './promise/resolve';\n\nvar Enumerator = function () {\n  function Enumerator(Constructor, input, abortOnReject, label) {\n    this._instanceConstructor = Constructor;\n    this.promise = new Constructor(noop, label);\n    this._abortOnReject = abortOnReject;\n    this._isUsingOwnPromise = Constructor === OwnPromise;\n    this._isUsingOwnResolve = Constructor.resolve === ownResolve;\n\n    this._init.apply(this, arguments);\n  }\n\n  Enumerator.prototype._init = function _init(Constructor, input) {\n    var len = input.length || 0;\n    this.length = len;\n    this._remaining = len;\n    this._result = new Array(len);\n\n    this._enumerate(input);\n  };\n\n  Enumerator.prototype._enumerate = function _enumerate(input) {\n    var length = this.length;\n    var promise = this.promise;\n\n    for (var i = 0; promise._state === PENDING && i < length; i++) {\n      this._eachEntry(input[i], i, true);\n    }\n    this._checkFullfillment();\n  };\n\n  Enumerator.prototype._checkFullfillment = function _checkFullfillment() {\n    if (this._remaining === 0) {\n      var result = this._result;\n      fulfill(this.promise, result);\n      this._result = null;\n    }\n  };\n\n  Enumerator.prototype._settleMaybeThenable = function _settleMaybeThenable(entry, i, firstPass) {\n    var c = this._instanceConstructor;\n\n    if (this._isUsingOwnResolve) {\n      var then = getThen(entry);\n\n      if (then === ownThen && entry._state !== PENDING) {\n        entry._onError = null;\n        this._settledAt(entry._state, i, entry._result, firstPass);\n      } else if (typeof then !== 'function') {\n        this._settledAt(FULFILLED, i, entry, firstPass);\n      } else if (this._isUsingOwnPromise) {\n        var promise = new c(noop);\n        handleMaybeThenable(promise, entry, then);\n        this._willSettleAt(promise, i, firstPass);\n      } else {\n        this._willSettleAt(new c(function (resolve) {\n          return resolve(entry);\n        }), i, firstPass);\n      }\n    } else {\n      this._willSettleAt(c.resolve(entry), i, firstPass);\n    }\n  };\n\n  Enumerator.prototype._eachEntry = function _eachEntry(entry, i, firstPass) {\n    if (entry !== null && typeof entry === 'object') {\n      this._settleMaybeThenable(entry, i, firstPass);\n    } else {\n      this._setResultAt(FULFILLED, i, entry, firstPass);\n    }\n  };\n\n  Enumerator.prototype._settledAt = function _settledAt(state, i, value, firstPass) {\n    var promise = this.promise;\n\n    if (promise._state === PENDING) {\n      if (this._abortOnReject && state === REJECTED) {\n        reject(promise, value);\n      } else {\n        this._setResultAt(state, i, value, firstPass);\n        this._checkFullfillment();\n      }\n    }\n  };\n\n  Enumerator.prototype._setResultAt = function _setResultAt(state, i, value, firstPass) {\n    this._remaining--;\n    this._result[i] = value;\n  };\n\n  Enumerator.prototype._willSettleAt = function _willSettleAt(promise, i, firstPass) {\n    var _this = this;\n\n    subscribe(promise, undefined, function (value) {\n      return _this._settledAt(FULFILLED, i, value, firstPass);\n    }, function (reason) {\n      return _this._settledAt(REJECTED, i, reason, firstPass);\n    });\n  };\n\n  return Enumerator;\n}();\n\nexport default Enumerator;\n\n\nexport function setSettledResult(state, i, value) {\n  this._remaining--;\n  if (state === FULFILLED) {\n    this._result[i] = {\n      state: 'fulfilled',\n      value: value\n    };\n  } else {\n    this._result[i] = {\n      state: 'rejected',\n      reason: value\n    };\n  }\n}","import Enumerator from '../enumerator';\n\n/**\n  `Promise.all` accepts an array of promises, and returns a new promise which\n  is fulfilled with an array of fulfillment values for the passed promises, or\n  rejected with the reason of the first passed promise to be rejected. It casts all\n  elements of the passed iterable to promises as it runs this algorithm.\n\n  Example:\n\n  ```javascript\n  import Promise, { resolve } from 'rsvp';\n\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // The array here would be [ 1, 2, 3 ];\n  });\n  ```\n\n  If any of the `promises` given to `RSVP.all` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promises's\n  rejection handler. For example:\n\n  Example:\n\n  ```javascript\n  import Promise, { resolve, reject } from 'rsvp';\n\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error(\"2\"));\n  let promise3 = reject(new Error(\"3\"));\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(error) {\n    // error.message === \"2\"\n  });\n  ```\n\n  @method all\n  @for Promise\n  @param {Array} entries array of promises\n  @param {String} [label] optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all `promises` have been\n  fulfilled, or rejected if any of them become rejected.\n  @static\n*/\nexport default function all(entries, label) {\n  if (!Array.isArray(entries)) {\n    return this.reject(new TypeError(\"Promise.all must be called with an array\"), label);\n  }\n  return new Enumerator(this, entries, true /* abort on reject */, label).promise;\n}","import { noop, resolve, reject, subscribe, PENDING } from '../-internal';\n\n/**\n  `Promise.race` returns a new promise which is settled in the same way as the\n  first passed promise to settle.\n\n  Example:\n\n  ```javascript\n  import Promise from 'rsvp';\n\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 2');\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // result === 'promise 2' because it was resolved before promise1\n    // was resolved.\n  });\n  ```\n\n  `Promise.race` is deterministic in that only the state of the first\n  settled promise matters. For example, even if other promises given to the\n  `promises` array argument are resolved, but the first settled promise has\n  become rejected before the other promises became fulfilled, the returned\n  promise will become rejected:\n\n  ```javascript\n  import Promise from 'rsvp';\n\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      reject(new Error('promise 2'));\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // Code here never runs\n  }, function(reason){\n    // reason.message === 'promise 2' because promise 2 became rejected before\n    // promise 1 became fulfilled\n  });\n  ```\n\n  An example real-world use case is implementing timeouts:\n\n  ```javascript\n  import Promise from 'rsvp';\n\n  Promise.race([ajax('foo.json'), timeout(5000)])\n  ```\n\n  @method race\n  @for Promise\n  @static\n  @param {Array} entries array of promises to observe\n  @param {String} [label] optional string for describing the promise returned.\n  Useful for tooling.\n  @return {Promise} a promise which settles in the same way as the first passed\n  promise to settle.\n*/\nexport default function race(entries, label) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  var promise = new Constructor(noop, label);\n\n  if (!Array.isArray(entries)) {\n    reject(promise, new TypeError('Promise.race must be called with an array'));\n    return promise;\n  }\n\n  for (var i = 0; promise._state === PENDING && i < entries.length; i++) {\n    subscribe(Constructor.resolve(entries[i]), undefined, function (value) {\n      return resolve(promise, value);\n    }, function (reason) {\n      return reject(promise, reason);\n    });\n  }\n\n  return promise;\n}","import { noop, reject as _reject } from '../-internal';\n\n/**\n  `Promise.reject` returns a promise rejected with the passed `reason`.\n  It is shorthand for the following:\n\n  ```javascript\n  import Promise from 'rsvp';\n\n  let promise = new Promise(function(resolve, reject){\n    reject(new Error('WHOOPS'));\n  });\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  import Promise from 'rsvp';\n\n  let promise = Promise.reject(new Error('WHOOPS'));\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  @method reject\n  @for Promise\n  @static\n  @param {*} reason value that the returned promise will be rejected with.\n  @param {String} [label] optional string for identifying the returned promise.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nexport default function reject(reason, label) {\n  /*jshint validthis:true */\n  var Constructor = this;\n  var promise = new Constructor(noop, label);\n  _reject(promise, reason);\n  return promise;\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport { config } from './config';\nimport instrument from './instrument';\nimport then from './then';\n\nimport { noop, initializePromise } from './-internal';\n\nimport all from './promise/all';\nimport race from './promise/race';\nimport Resolve from './promise/resolve';\nimport Reject from './promise/reject';\n\nvar guidKey = 'rsvp_' + Date.now() + '-';\nvar counter = 0;\n\nfunction needsResolver() {\n  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n}\n\nfunction needsNew() {\n  throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n}\n\n/**\n  Promise objects represent the eventual result of an asynchronous operation. The\n  primary way of interacting with a promise is through its `then` method, which\n  registers callbacks to receive either a promise’s eventual value or the reason\n  why the promise cannot be fulfilled.\n\n  Terminology\n  -----------\n\n  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n  - `thenable` is an object or function that defines a `then` method.\n  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n  - `exception` is a value that is thrown using the throw statement.\n  - `reason` is a value that indicates why a promise was rejected.\n  - `settled` the final resting state of a promise, fulfilled or rejected.\n\n  A promise can be in one of three states: pending, fulfilled, or rejected.\n\n  Promises that are fulfilled have a fulfillment value and are in the fulfilled\n  state.  Promises that are rejected have a rejection reason and are in the\n  rejected state.  A fulfillment value is never a thenable.\n\n  Promises can also be said to *resolve* a value.  If this value is also a\n  promise, then the original promise's settled state will match the value's\n  settled state.  So a promise that *resolves* a promise that rejects will\n  itself reject, and a promise that *resolves* a promise that fulfills will\n  itself fulfill.\n\n\n  Basic Usage:\n  ------------\n\n  ```js\n  let promise = new Promise(function(resolve, reject) {\n    // on success\n    resolve(value);\n\n    // on failure\n    reject(reason);\n  });\n\n  promise.then(function(value) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Advanced Usage:\n  ---------------\n\n  Promises shine when abstracting away asynchronous interactions such as\n  `XMLHttpRequest`s.\n\n  ```js\n  function getJSON(url) {\n    return new Promise(function(resolve, reject){\n      let xhr = new XMLHttpRequest();\n\n      xhr.open('GET', url);\n      xhr.onreadystatechange = handler;\n      xhr.responseType = 'json';\n      xhr.setRequestHeader('Accept', 'application/json');\n      xhr.send();\n\n      function handler() {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200) {\n            resolve(this.response);\n          } else {\n            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n          }\n        }\n      };\n    });\n  }\n\n  getJSON('/posts.json').then(function(json) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Unlike callbacks, promises are great composable primitives.\n\n  ```js\n  Promise.all([\n    getJSON('/posts'),\n    getJSON('/comments')\n  ]).then(function(values){\n    values[0] // => postsJSON\n    values[1] // => commentsJSON\n\n    return values;\n  });\n  ```\n\n  @class Promise\n  @public\n  @param {function} resolver\n  @param {String} [label] optional string for labeling the promise.\n  Useful for tooling.\n  @constructor\n*/\n\nvar Promise = function () {\n  function Promise(resolver, label) {\n    this._id = counter++;\n    this._label = label;\n    this._state = undefined;\n    this._result = undefined;\n    this._subscribers = [];\n\n    config.instrument && instrument('created', this);\n\n    if (noop !== resolver) {\n      typeof resolver !== 'function' && needsResolver();\n      this instanceof Promise ? initializePromise(this, resolver) : needsNew();\n    }\n  }\n\n  Promise.prototype._onError = function _onError(reason) {\n    var _this = this;\n\n    config.after(function () {\n      if (_this._onError) {\n        config.trigger('error', reason, _this._label);\n      }\n    });\n  };\n\n  /**\n    `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n    as the catch block of a try/catch statement.\n  \n    ```js\n    function findAuthor(){\n      throw new Error('couldn\\'t find that author');\n    }\n  \n    // synchronous\n    try {\n      findAuthor();\n    } catch(reason) {\n      // something went wrong\n    }\n  \n    // async with promises\n    findAuthor().catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method catch\n    @param {Function} onRejection\n    @param {String} [label] optional string for labeling the promise.\n    Useful for tooling.\n    @return {Promise}\n  */\n\n\n  Promise.prototype.catch = function _catch(onRejection, label) {\n    return this.then(undefined, onRejection, label);\n  };\n\n  /**\n    `finally` will be invoked regardless of the promise's fate just as native\n    try/catch/finally behaves\n  \n    Synchronous example:\n  \n    ```js\n    findAuthor() {\n      if (Math.random() > 0.5) {\n        throw new Error();\n      }\n      return new Author();\n    }\n  \n    try {\n      return findAuthor(); // succeed or fail\n    } catch(error) {\n      return findOtherAuthor();\n    } finally {\n      // always runs\n      // doesn't affect the return value\n    }\n    ```\n  \n    Asynchronous example:\n  \n    ```js\n    findAuthor().catch(function(reason){\n      return findOtherAuthor();\n    }).finally(function(){\n      // author was either found, or not\n    });\n    ```\n  \n    @method finally\n    @param {Function} callback\n    @param {String} [label] optional string for labeling the promise.\n    Useful for tooling.\n    @return {Promise}\n  */\n\n\n  Promise.prototype.finally = function _finally(callback, label) {\n    var promise = this;\n    var constructor = promise.constructor;\n\n    if (typeof callback === 'function') {\n      return promise.then(function (value) {\n        return constructor.resolve(callback()).then(function () {\n          return value;\n        });\n      }, function (reason) {\n        return constructor.resolve(callback()).then(function () {\n          throw reason;\n        });\n      });\n    }\n\n    return promise.then(callback, callback);\n  };\n\n  return Promise;\n}();\n\nPromise.cast = Resolve; // deprecated\nPromise.all = all;\nPromise.race = race;\nPromise.resolve = Resolve;\nPromise.reject = Reject;\n\nPromise.prototype._guidKey = guidKey;\n\n/**\n  The primary way of interacting with a promise is through its `then` method,\n  which registers callbacks to receive either a promise's eventual value or the\n  reason why the promise cannot be fulfilled.\n\n  ```js\n  findUser().then(function(user){\n    // user is available\n  }, function(reason){\n    // user is unavailable, and you are given the reason why\n  });\n  ```\n\n  Chaining\n  --------\n\n  The return value of `then` is itself a promise.  This second, 'downstream'\n  promise is resolved with the return value of the first promise's fulfillment\n  or rejection handler, or rejected if the handler throws an exception.\n\n  ```js\n  findUser().then(function (user) {\n    return user.name;\n  }, function (reason) {\n    return 'default name';\n  }).then(function (userName) {\n    // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n    // will be `'default name'`\n  });\n\n  findUser().then(function (user) {\n    throw new Error('Found user, but still unhappy');\n  }, function (reason) {\n    throw new Error('`findUser` rejected and we\\'re unhappy');\n  }).then(function (value) {\n    // never reached\n  }, function (reason) {\n    // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n    // If `findUser` rejected, `reason` will be '`findUser` rejected and we\\'re unhappy'.\n  });\n  ```\n  If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n\n  ```js\n  findUser().then(function (user) {\n    throw new PedagogicalException('Upstream error');\n  }).then(function (value) {\n    // never reached\n  }).then(function (value) {\n    // never reached\n  }, function (reason) {\n    // The `PedgagocialException` is propagated all the way down to here\n  });\n  ```\n\n  Assimilation\n  ------------\n\n  Sometimes the value you want to propagate to a downstream promise can only be\n  retrieved asynchronously. This can be achieved by returning a promise in the\n  fulfillment or rejection handler. The downstream promise will then be pending\n  until the returned promise is settled. This is called *assimilation*.\n\n  ```js\n  findUser().then(function (user) {\n    return findCommentsByAuthor(user);\n  }).then(function (comments) {\n    // The user's comments are now available\n  });\n  ```\n\n  If the assimliated promise rejects, then the downstream promise will also reject.\n\n  ```js\n  findUser().then(function (user) {\n    return findCommentsByAuthor(user);\n  }).then(function (comments) {\n    // If `findCommentsByAuthor` fulfills, we'll have the value here\n  }, function (reason) {\n    // If `findCommentsByAuthor` rejects, we'll have the reason here\n  });\n  ```\n\n  Simple Example\n  --------------\n\n  Synchronous Example\n\n  ```javascript\n  let result;\n\n  try {\n    result = findResult();\n    // success\n  } catch(reason) {\n    // failure\n  }\n  ```\n\n  Errback Example\n\n  ```js\n  findResult(function(result, err){\n    if (err) {\n      // failure\n    } else {\n      // success\n    }\n  });\n  ```\n\n  Promise Example;\n\n  ```javascript\n  findResult().then(function(result){\n    // success\n  }, function(reason){\n    // failure\n  });\n  ```\n\n  Advanced Example\n  --------------\n\n  Synchronous Example\n\n  ```javascript\n  let author, books;\n\n  try {\n    author = findAuthor();\n    books  = findBooksByAuthor(author);\n    // success\n  } catch(reason) {\n    // failure\n  }\n  ```\n\n  Errback Example\n\n  ```js\n\n  function foundBooks(books) {\n\n  }\n\n  function failure(reason) {\n\n  }\n\n  findAuthor(function(author, err){\n    if (err) {\n      failure(err);\n      // failure\n    } else {\n      try {\n        findBoooksByAuthor(author, function(books, err) {\n          if (err) {\n            failure(err);\n          } else {\n            try {\n              foundBooks(books);\n            } catch(reason) {\n              failure(reason);\n            }\n          }\n        });\n      } catch(error) {\n        failure(err);\n      }\n      // success\n    }\n  });\n  ```\n\n  Promise Example;\n\n  ```javascript\n  findAuthor().\n    then(findBooksByAuthor).\n    then(function(books){\n      // found books\n  }).catch(function(reason){\n    // something went wrong\n  });\n  ```\n\n  @method then\n  @param {Function} onFulfillment\n  @param {Function} onRejection\n  @param {String} [label] optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise}\n*/\nPromise.prototype.then = then;\n\nexport default Promise;","import Promise from './promise';\nimport { noop, resolve, reject, getThen, tryCatch, TRY_CATCH_ERROR } from './-internal';\n\nfunction makeObject(_, argumentNames) {\n  var obj = {};\n  var length = _.length;\n  var args = new Array(length);\n\n  for (var x = 0; x < length; x++) {\n    args[x] = _[x];\n  }\n\n  for (var i = 0; i < argumentNames.length; i++) {\n    var name = argumentNames[i];\n    obj[name] = args[i + 1];\n  }\n\n  return obj;\n}\n\nfunction arrayResult(_) {\n  var length = _.length;\n  var args = new Array(length - 1);\n\n  for (var i = 1; i < length; i++) {\n    args[i - 1] = _[i];\n  }\n\n  return args;\n}\n\nfunction wrapThenable(then, promise) {\n  return {\n    then: function (onFulFillment, onRejection) {\n      return then.call(promise, onFulFillment, onRejection);\n    }\n  };\n}\n\n/**\n  `denodeify` takes a 'node-style' function and returns a function that\n  will return an `Promise`. You can use `denodeify` in Node.js or the\n  browser when you'd prefer to use promises over using callbacks. For example,\n  `denodeify` transforms the following:\n\n  ```javascript\n  let fs = require('fs');\n\n  fs.readFile('myfile.txt', function(err, data){\n    if (err) return handleError(err);\n    handleData(data);\n  });\n  ```\n\n  into:\n\n  ```javascript\n  let fs = require('fs');\n  let readFile = denodeify(fs.readFile);\n\n  readFile('myfile.txt').then(handleData, handleError);\n  ```\n\n  If the node function has multiple success parameters, then `denodeify`\n  just returns the first one:\n\n  ```javascript\n  let request = denodeify(require('request'));\n\n  request('http://example.com').then(function(res) {\n    // ...\n  });\n  ```\n\n  However, if you need all success parameters, setting `denodeify`'s\n  second parameter to `true` causes it to return all success parameters\n  as an array:\n\n  ```javascript\n  let request = denodeify(require('request'), true);\n\n  request('http://example.com').then(function(result) {\n    // result[0] -> res\n    // result[1] -> body\n  });\n  ```\n\n  Or if you pass it an array with names it returns the parameters as a hash:\n\n  ```javascript\n  let request = denodeify(require('request'), ['res', 'body']);\n\n  request('http://example.com').then(function(result) {\n    // result.res\n    // result.body\n  });\n  ```\n\n  Sometimes you need to retain the `this`:\n\n  ```javascript\n  let app = require('express')();\n  let render = denodeify(app.render.bind(app));\n  ```\n\n  The denodified function inherits from the original function. It works in all\n  environments, except IE 10 and below. Consequently all properties of the original\n  function are available to you. However, any properties you change on the\n  denodeified function won't be changed on the original function. Example:\n\n  ```javascript\n  let request = denodeify(require('request')),\n      cookieJar = request.jar(); // <- Inheritance is used here\n\n  request('http://example.com', {jar: cookieJar}).then(function(res) {\n    // cookieJar.cookies holds now the cookies returned by example.com\n  });\n  ```\n\n  Using `denodeify` makes it easier to compose asynchronous operations instead\n  of using callbacks. For example, instead of:\n\n  ```javascript\n  let fs = require('fs');\n\n  fs.readFile('myfile.txt', function(err, data){\n    if (err) { ... } // Handle error\n    fs.writeFile('myfile2.txt', data, function(err){\n      if (err) { ... } // Handle error\n      console.log('done')\n    });\n  });\n  ```\n\n  you can chain the operations together using `then` from the returned promise:\n\n  ```javascript\n  let fs = require('fs');\n  let readFile = denodeify(fs.readFile);\n  let writeFile = denodeify(fs.writeFile);\n\n  readFile('myfile.txt').then(function(data){\n    return writeFile('myfile2.txt', data);\n  }).then(function(){\n    console.log('done')\n  }).catch(function(error){\n    // Handle error\n  });\n  ```\n\n  @method denodeify\n  @public\n  @static\n  @for rsvp\n  @param {Function} nodeFunc a 'node-style' function that takes a callback as\n  its last argument. The callback expects an error to be passed as its first\n  argument (if an error occurred, otherwise null), and the value from the\n  operation as its second argument ('function(err, value){ }').\n  @param {Boolean|Array} [options] An optional paramter that if set\n  to `true` causes the promise to fulfill with the callback's success arguments\n  as an array. This is useful if the node function has multiple success\n  paramters. If you set this paramter to an array with names, the promise will\n  fulfill with a hash with these names as keys and the success parameters as\n  values.\n  @return {Function} a function that wraps `nodeFunc` to return a `Promise`\n*/\nexport default function denodeify(nodeFunc, options) {\n  var fn = function () {\n    var l = arguments.length;\n    var args = new Array(l + 1);\n    var promiseInput = false;\n\n    for (var i = 0; i < l; ++i) {\n      var arg = arguments[i];\n\n      if (!promiseInput) {\n        // TODO: clean this up\n        promiseInput = needsPromiseInput(arg);\n        if (promiseInput === TRY_CATCH_ERROR) {\n          var error = TRY_CATCH_ERROR.error;\n          TRY_CATCH_ERROR.error = null;\n          var p = new Promise(noop);\n          reject(p, error);\n          return p;\n        } else if (promiseInput && promiseInput !== true) {\n          arg = wrapThenable(promiseInput, arg);\n        }\n      }\n      args[i] = arg;\n    }\n\n    var promise = new Promise(noop);\n\n    args[l] = function (err, val) {\n      if (err) {\n        reject(promise, err);\n      } else if (options === undefined) {\n        resolve(promise, val);\n      } else if (options === true) {\n        resolve(promise, arrayResult(arguments));\n      } else if (Array.isArray(options)) {\n        resolve(promise, makeObject(arguments, options));\n      } else {\n        resolve(promise, val);\n      }\n    };\n\n    if (promiseInput) {\n      return handlePromiseInput(promise, args, nodeFunc, this);\n    } else {\n      return handleValueInput(promise, args, nodeFunc, this);\n    }\n  };\n\n  fn.__proto__ = nodeFunc;\n\n  return fn;\n}\n\nfunction handleValueInput(promise, args, nodeFunc, self) {\n  var result = tryCatch(nodeFunc).apply(self, args);\n  if (result === TRY_CATCH_ERROR) {\n    var error = TRY_CATCH_ERROR.error;\n    TRY_CATCH_ERROR.error = null;\n    reject(promise, error);\n  }\n  return promise;\n}\n\nfunction handlePromiseInput(promise, args, nodeFunc, self) {\n  return Promise.all(args).then(function (args) {\n    return handleValueInput(promise, args, nodeFunc, self);\n  });\n}\n\nfunction needsPromiseInput(arg) {\n  if (arg !== null && typeof arg === 'object') {\n    if (arg.constructor === Promise) {\n      return true;\n    } else {\n      return getThen(arg);\n    }\n  } else {\n    return false;\n  }\n}","import Promise from \"./promise\";\n\n/**\n  This is a convenient alias for `Promise.all`.\n\n  @method all\n  @public\n  @static\n  @for rsvp\n  @param {Array} array Array of promises.\n  @param {String} [label] An optional label. This is useful\n  for tooling.\n*/\nexport default function all(array, label) {\n  return Promise.all(array, label);\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport { default as Enumerator, setSettledResult } from './enumerator';\nimport Promise from './promise';\n\n/**\n@module rsvp\n@public\n**/\n\nvar AllSettled = function (_Enumerator) {\n  _inherits(AllSettled, _Enumerator);\n\n  function AllSettled(Constructor, entries, label) {\n    return _possibleConstructorReturn(this, _Enumerator.call(this, Constructor, entries, false /* don't abort on reject */, label));\n  }\n\n  return AllSettled;\n}(Enumerator);\n\nAllSettled.prototype._setResultAt = setSettledResult;\n\n/**\n`RSVP.allSettled` is similar to `RSVP.all`, but instead of implementing\na fail-fast method, it waits until all the promises have returned and\nshows you all the results. This is useful if you want to handle multiple\npromises' failure states together as a set.\n Returns a promise that is fulfilled when all the given promises have been\nsettled. The return promise is fulfilled with an array of the states of\nthe promises passed into the `promises` array argument.\n Each state object will either indicate fulfillment or rejection, and\nprovide the corresponding value or reason. The states will take one of\nthe following formats:\n ```javascript\n{ state: 'fulfilled', value: value }\n  or\n{ state: 'rejected', reason: reason }\n```\n Example:\n ```javascript\nlet promise1 = RSVP.Promise.resolve(1);\nlet promise2 = RSVP.Promise.reject(new Error('2'));\nlet promise3 = RSVP.Promise.reject(new Error('3'));\nlet promises = [ promise1, promise2, promise3 ];\n RSVP.allSettled(promises).then(function(array){\n  // array == [\n  //   { state: 'fulfilled', value: 1 },\n  //   { state: 'rejected', reason: Error },\n  //   { state: 'rejected', reason: Error }\n  // ]\n  // Note that for the second item, reason.message will be '2', and for the\n  // third item, reason.message will be '3'.\n}, function(error) {\n  // Not run. (This block would only be called if allSettled had failed,\n  // for instance if passed an incorrect argument type.)\n});\n```\n @method allSettled\n@public\n@static\n@for rsvp\n@param {Array} entries\n@param {String} [label] - optional string that describes the promise.\nUseful for tooling.\n@return {Promise} promise that is fulfilled with an array of the settled\nstates of the constituent promises.\n*/\n\nexport default function allSettled(entries, label) {\n  if (!Array.isArray(entries)) {\n    return Promise.reject(new TypeError(\"Promise.allSettled must be called with an array\"), label);\n  }\n\n  return new AllSettled(Promise, entries, label).promise;\n}","import Promise from './promise';\n\n/**\n  This is a convenient alias for `Promise.race`.\n\n  @method race\n  @public\n  @static\n  @for rsvp\n  @param {Array} array Array of promises.\n  @param {String} [label] An optional label. This is useful\n  for tooling.\n */\nexport default function race(array, label) {\n  return Promise.race(array, label);\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport Enumerator from './enumerator';\nimport { PENDING, FULFILLED, fulfill } from './-internal';\n\nvar PromiseHash = function (_Enumerator) {\n  _inherits(PromiseHash, _Enumerator);\n\n  function PromiseHash(Constructor, object) {\n    var abortOnReject = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    var label = arguments[3];\n    return _possibleConstructorReturn(this, _Enumerator.call(this, Constructor, object, abortOnReject, label));\n  }\n\n  PromiseHash.prototype._init = function _init(Constructor, object) {\n    this._result = {};\n    this._enumerate(object);\n  };\n\n  PromiseHash.prototype._enumerate = function _enumerate(input) {\n    var keys = Object.keys(input);\n\n    var length = keys.length;\n    var promise = this.promise;\n    this._remaining = length;\n\n    var key = void 0,\n        val = void 0;\n    for (var i = 0; promise._state === PENDING && i < length; i++) {\n      key = keys[i];\n      val = input[key];\n      this._eachEntry(val, key, true);\n    }\n\n    this._checkFullfillment();\n  };\n\n  return PromiseHash;\n}(Enumerator);\n\nexport default PromiseHash;","import Promise from './promise';\nimport PromiseHash from './promise-hash';\n\n/**\n  `hash` is similar to `all`, but takes an object instead of an array\n  for its `promises` argument.\n\n  Returns a promise that is fulfilled when all the given promises have been\n  fulfilled, or rejected if any of them become rejected. The returned promise\n  is fulfilled with a hash that has the same key names as the `promises` object\n  argument. If any of the values in the object are not promises, they will\n  simply be copied over to the fulfilled object.\n\n  Example:\n\n  ```javascript\n  let promises = {\n    myPromise: resolve(1),\n    yourPromise: resolve(2),\n    theirPromise: resolve(3),\n    notAPromise: 4\n  };\n\n  hash(promises).then(function(hash){\n    // hash here is an object that looks like:\n    // {\n    //   myPromise: 1,\n    //   yourPromise: 2,\n    //   theirPromise: 3,\n    //   notAPromise: 4\n    // }\n  });\n  ```\n\n  If any of the `promises` given to `hash` are rejected, the first promise\n  that is rejected will be given as the reason to the rejection handler.\n\n  Example:\n\n  ```javascript\n  let promises = {\n    myPromise: resolve(1),\n    rejectedPromise: reject(new Error('rejectedPromise')),\n    anotherRejectedPromise: reject(new Error('anotherRejectedPromise')),\n  };\n\n  hash(promises).then(function(hash){\n    // Code here never runs because there are rejected promises!\n  }, function(reason) {\n    // reason.message === 'rejectedPromise'\n  });\n  ```\n\n  An important note: `hash` is intended for plain JavaScript objects that\n  are just a set of keys and values. `hash` will NOT preserve prototype\n  chains.\n\n  Example:\n\n  ```javascript\n  import { hash, resolve } from 'rsvp';\n  function MyConstructor(){\n    this.example = resolve('Example');\n  }\n\n  MyConstructor.prototype = {\n    protoProperty: resolve('Proto Property')\n  };\n\n  let myObject = new MyConstructor();\n\n  hash(myObject).then(function(hash){\n    // protoProperty will not be present, instead you will just have an\n    // object that looks like:\n    // {\n    //   example: 'Example'\n    // }\n    //\n    // hash.hasOwnProperty('protoProperty'); // false\n    // 'undefined' === typeof hash.protoProperty\n  });\n  ```\n\n  @method hash\n  @public\n  @static\n  @for rsvp\n  @param {Object} object\n  @param {String} [label] optional string that describes the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all properties of `promises`\n  have been fulfilled, or rejected if any of them become rejected.\n*/\nexport default function hash(object, label) {\n  return Promise.resolve(object, label).then(function (object) {\n    if (object === null || typeof object !== 'object') {\n      throw new TypeError(\"Promise.hash must be called with an object\");\n    }\n    return new PromiseHash(Promise, object, label).promise;\n  });\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport Promise from './promise';\nimport { default as Enumerator, setSettledResult } from './enumerator';\nimport PromiseHash from './promise-hash';\n\nvar HashSettled = function (_PromiseHash) {\n  _inherits(HashSettled, _PromiseHash);\n\n  function HashSettled(Constructor, object, label) {\n    return _possibleConstructorReturn(this, _PromiseHash.call(this, Constructor, object, false, label));\n  }\n\n  return HashSettled;\n}(PromiseHash);\n\nHashSettled.prototype._setResultAt = setSettledResult;\n\n/**\n  `hashSettled` is similar to `allSettled`, but takes an object\n  instead of an array for its `promises` argument.\n\n  Unlike `all` or `hash`, which implement a fail-fast method,\n  but like `allSettled`, `hashSettled` waits until all the\n  constituent promises have returned and then shows you all the results\n  with their states and values/reasons. This is useful if you want to\n  handle multiple promises' failure states together as a set.\n\n  Returns a promise that is fulfilled when all the given promises have been\n  settled, or rejected if the passed parameters are invalid.\n\n  The returned promise is fulfilled with a hash that has the same key names as\n  the `promises` object argument. If any of the values in the object are not\n  promises, they will be copied over to the fulfilled object and marked with state\n  'fulfilled'.\n\n  Example:\n\n  ```javascript\n  import { hashSettled, resolve } from 'rsvp';\n\n  let promises = {\n    myPromise: resolve(1),\n    yourPromise: resolve(2),\n    theirPromise: resolve(3),\n    notAPromise: 4\n  };\n\n  hashSettled(promises).then(function(hash){\n    // hash here is an object that looks like:\n    // {\n    //   myPromise: { state: 'fulfilled', value: 1 },\n    //   yourPromise: { state: 'fulfilled', value: 2 },\n    //   theirPromise: { state: 'fulfilled', value: 3 },\n    //   notAPromise: { state: 'fulfilled', value: 4 }\n    // }\n  });\n  ```\n\n  If any of the `promises` given to `hash` are rejected, the state will\n  be set to 'rejected' and the reason for rejection provided.\n\n  Example:\n\n  ```javascript\n  import { hashSettled, reject, resolve } from 'rsvp';\n\n  let promises = {\n    myPromise: resolve(1),\n    rejectedPromise: reject(new Error('rejection')),\n    anotherRejectedPromise: reject(new Error('more rejection')),\n  };\n\n  hashSettled(promises).then(function(hash){\n    // hash here is an object that looks like:\n    // {\n    //   myPromise:              { state: 'fulfilled', value: 1 },\n    //   rejectedPromise:        { state: 'rejected', reason: Error },\n    //   anotherRejectedPromise: { state: 'rejected', reason: Error },\n    // }\n    // Note that for rejectedPromise, reason.message == 'rejection',\n    // and for anotherRejectedPromise, reason.message == 'more rejection'.\n  });\n  ```\n\n  An important note: `hashSettled` is intended for plain JavaScript objects that\n  are just a set of keys and values. `hashSettled` will NOT preserve prototype\n  chains.\n\n  Example:\n\n  ```javascript\n  import Promise, { hashSettled, resolve } from 'rsvp';\n\n  function MyConstructor(){\n    this.example = resolve('Example');\n  }\n\n  MyConstructor.prototype = {\n    protoProperty: Promise.resolve('Proto Property')\n  };\n\n  let myObject = new MyConstructor();\n\n  hashSettled(myObject).then(function(hash){\n    // protoProperty will not be present, instead you will just have an\n    // object that looks like:\n    // {\n    //   example: { state: 'fulfilled', value: 'Example' }\n    // }\n    //\n    // hash.hasOwnProperty('protoProperty'); // false\n    // 'undefined' === typeof hash.protoProperty\n  });\n  ```\n\n  @method hashSettled\n  @public\n  @for rsvp\n  @param {Object} object\n  @param {String} [label] optional string that describes the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when when all properties of `promises`\n  have been settled.\n  @static\n*/\n\nexport default function hashSettled(object, label) {\n  return Promise.resolve(object, label).then(function (object) {\n    if (object === null || typeof object !== 'object') {\n      throw new TypeError(\"hashSettled must be called with an object\");\n    }\n\n    return new HashSettled(Promise, object, false, label).promise;\n  });\n}","/**\n  `rethrow` will rethrow an error on the next turn of the JavaScript event\n  loop in order to aid debugging.\n\n  Promises A+ specifies that any exceptions that occur with a promise must be\n  caught by the promises implementation and bubbled to the last handler. For\n  this reason, it is recommended that you always specify a second rejection\n  handler function to `then`. However, `rethrow` will throw the exception\n  outside of the promise, so it bubbles up to your console if in the browser,\n  or domain/cause uncaught exception in Node. `rethrow` will also throw the\n  error again so the error can be handled by the promise per the spec.\n\n  ```javascript\n  import { rethrow } from 'rsvp';\n\n  function throws(){\n    throw new Error('Whoops!');\n  }\n\n  let promise = new Promise(function(resolve, reject){\n    throws();\n  });\n\n  promise.catch(rethrow).then(function(){\n    // Code here doesn't run because the promise became rejected due to an\n    // error!\n  }, function (err){\n    // handle the error here\n  });\n  ```\n\n  The 'Whoops' error will be thrown on the next turn of the event loop\n  and you can watch for it in your console. You can also handle it using a\n  rejection handler given to `.then` or `.catch` on the returned promise.\n\n  @method rethrow\n  @public\n  @static\n  @for rsvp\n  @param {Error} reason reason the promise became rejected.\n  @throws Error\n  @static\n*/\nexport default function rethrow(reason) {\n  setTimeout(function () {\n    throw reason;\n  });\n  throw reason;\n}","import Promise from \"./promise\";\n\n/**\n  `defer` returns an object similar to jQuery's `$.Deferred`.\n  `defer` should be used when porting over code reliant on `$.Deferred`'s\n  interface. New code should use the `Promise` constructor instead.\n\n  The object returned from `defer` is a plain object with three properties:\n\n  * promise - an `Promise`.\n  * reject - a function that causes the `promise` property on this object to\n    become rejected\n  * resolve - a function that causes the `promise` property on this object to\n    become fulfilled.\n\n  Example:\n\n   ```javascript\n   let deferred = defer();\n\n   deferred.resolve(\"Success!\");\n\n   deferred.promise.then(function(value){\n     // value here is \"Success!\"\n   });\n   ```\n\n  @method defer\n  @public\n  @static\n  @for rsvp\n  @param {String} [label] optional string for labeling the promise.\n  Useful for tooling.\n  @return {Object}\n */\n\nexport default function defer(label) {\n  var deferred = { resolve: undefined, reject: undefined };\n\n  deferred.promise = new Promise(function (resolve, reject) {\n    deferred.resolve = resolve;\n    deferred.reject = reject;\n  }, label);\n\n  return deferred;\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport Promise from './promise';\nimport { default as Enumerator } from './enumerator';\nimport { tryCatch, TRY_CATCH_ERROR, REJECTED } from './-internal';\n\nexport var MapEnumerator = function (_Enumerator) {\n  _inherits(MapEnumerator, _Enumerator);\n\n  function MapEnumerator(Constructor, entries, mapFn, label) {\n    return _possibleConstructorReturn(this, _Enumerator.call(this, Constructor, entries, true, label, mapFn));\n  }\n\n  MapEnumerator.prototype._init = function _init(Constructor, input, bool, label, mapFn) {\n    var len = input.length || 0;\n    this.length = len;\n    this._remaining = len;\n    this._result = new Array(len);\n    this._mapFn = mapFn;\n\n    this._enumerate(input);\n  };\n\n  MapEnumerator.prototype._setResultAt = function _setResultAt(state, i, value, firstPass) {\n    if (firstPass) {\n      var val = tryCatch(this._mapFn)(value, i);\n      if (val === TRY_CATCH_ERROR) {\n        this._settledAt(REJECTED, i, val.error, false);\n      } else {\n        this._eachEntry(val, i, false);\n      }\n    } else {\n      this._remaining--;\n      this._result[i] = value;\n    }\n  };\n\n  return MapEnumerator;\n}(Enumerator);\n\n/**\n `map` is similar to JavaScript's native `map` method. `mapFn` is eagerly called\n  meaning that as soon as any promise resolves its value will be passed to `mapFn`.\n  `map` returns a promise that will become fulfilled with the result of running\n  `mapFn` on the values the promises become fulfilled with.\n\n  For example:\n\n  ```javascript\n  import { map, resolve } from 'rsvp';\n\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  let mapFn = function(item){\n    return item + 1;\n  };\n\n  map(promises, mapFn).then(function(result){\n    // result is [ 2, 3, 4 ]\n  });\n  ```\n\n  If any of the `promises` given to `map` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promise's\n  rejection handler. For example:\n\n  ```javascript\n  import { map, reject, resolve } from 'rsvp';\n\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error('2'));\n  let promise3 = reject(new Error('3'));\n  let promises = [ promise1, promise2, promise3 ];\n\n  let mapFn = function(item){\n    return item + 1;\n  };\n\n  map(promises, mapFn).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(reason) {\n    // reason.message === '2'\n  });\n  ```\n\n  `map` will also wait if a promise is returned from `mapFn`. For example,\n  say you want to get all comments from a set of blog posts, but you need\n  the blog posts first because they contain a url to those comments.\n\n  ```javscript\n  import { map } from 'rsvp';\n\n  let mapFn = function(blogPost){\n    // getComments does some ajax and returns an Promise that is fulfilled\n    // with some comments data\n    return getComments(blogPost.comments_url);\n  };\n\n  // getBlogPosts does some ajax and returns an Promise that is fulfilled\n  // with some blog post data\n  map(getBlogPosts(), mapFn).then(function(comments){\n    // comments is the result of asking the server for the comments\n    // of all blog posts returned from getBlogPosts()\n  });\n  ```\n\n  @method map\n  @public\n  @static\n  @for rsvp\n  @param {Array} promises\n  @param {Function} mapFn function to be called on each fulfilled promise.\n  @param {String} [label] optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled with the result of calling\n  `mapFn` on each fulfilled promise or value when they become fulfilled.\n   The promise will be rejected if any of the given `promises` become rejected.\n*/\nexport default function map(promises, mapFn, label) {\n  if (typeof mapFn !== 'function') {\n    return Promise.reject(new TypeError(\"map expects a function as a second argument\"), label);\n  }\n\n  return Promise.resolve(promises, label).then(function (promises) {\n    if (!Array.isArray(promises)) {\n      throw new TypeError(\"map must be called with an array\");\n    }\n    return new MapEnumerator(Promise, promises, mapFn, label).promise;\n  });\n}","import Promise from './promise';\n\n/**\n  This is a convenient alias for `Promise.resolve`.\n\n  @method resolve\n  @public\n  @static\n  @for rsvp\n  @param {*} value value that the returned promise will be resolved with\n  @param {String} [label] optional string for identifying the returned promise.\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nexport default function resolve(value, label) {\n  return Promise.resolve(value, label);\n}","import Promise from './promise';\n\n/**\n  This is a convenient alias for `Promise.reject`.\n\n  @method reject\n  @public\n  @static\n  @for rsvp\n  @param {*} reason value that the returned promise will be rejected with.\n  @param {String} [label] optional string for identifying the returned promise.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nexport default function reject(reason, label) {\n  return Promise.reject(reason, label);\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport Promise from './promise';\nimport { MapEnumerator } from './map';\nimport { tryCatch, fulfill, TRY_CATCH_ERROR, REJECTED } from './-internal';\n\nvar EMPTY_OBJECT = {};\n\nvar FilterEnumerator = function (_MapEnumerator) {\n  _inherits(FilterEnumerator, _MapEnumerator);\n\n  function FilterEnumerator() {\n    return _possibleConstructorReturn(this, _MapEnumerator.apply(this, arguments));\n  }\n\n  FilterEnumerator.prototype._checkFullfillment = function _checkFullfillment() {\n    if (this._remaining === 0 && this._result !== null) {\n      var result = this._result.filter(function (val) {\n        return val !== EMPTY_OBJECT;\n      });\n      fulfill(this.promise, result);\n      this._result = null;\n    }\n  };\n\n  FilterEnumerator.prototype._setResultAt = function _setResultAt(state, i, value, firstPass) {\n    if (firstPass) {\n      this._result[i] = value;\n      var val = tryCatch(this._mapFn)(value, i);\n      if (val === TRY_CATCH_ERROR) {\n        this._settledAt(REJECTED, i, val.error, false);\n      } else {\n        this._eachEntry(val, i, false);\n      }\n    } else {\n      this._remaining--;\n      if (!value) {\n        this._result[i] = EMPTY_OBJECT;\n      }\n    }\n  };\n\n  return FilterEnumerator;\n}(MapEnumerator);\n\n/**\n `filter` is similar to JavaScript's native `filter` method.\n `filterFn` is eagerly called meaning that as soon as any promise\n  resolves its value will be passed to `filterFn`. `filter` returns\n  a promise that will become fulfilled with the result of running\n  `filterFn` on the values the promises become fulfilled with.\n\n  For example:\n\n  ```javascript\n  import { filter, resolve } from 'rsvp';\n\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n\n  let promises = [promise1, promise2, promise3];\n\n  let filterFn = function(item){\n    return item > 1;\n  };\n\n  filter(promises, filterFn).then(function(result){\n    // result is [ 2, 3 ]\n  });\n  ```\n\n  If any of the `promises` given to `filter` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promise's\n  rejection handler. For example:\n\n  ```javascript\n  import { filter, reject, resolve } from 'rsvp';\n\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error('2'));\n  let promise3 = reject(new Error('3'));\n  let promises = [ promise1, promise2, promise3 ];\n\n  let filterFn = function(item){\n    return item > 1;\n  };\n\n  filter(promises, filterFn).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(reason) {\n    // reason.message === '2'\n  });\n  ```\n\n  `filter` will also wait for any promises returned from `filterFn`.\n  For instance, you may want to fetch a list of users then return a subset\n  of those users based on some asynchronous operation:\n\n  ```javascript\n  import { filter, resolve } from 'rsvp';\n\n  let alice = { name: 'alice' };\n  let bob   = { name: 'bob' };\n  let users = [ alice, bob ];\n\n  let promises = users.map(function(user){\n    return resolve(user);\n  });\n\n  let filterFn = function(user){\n    // Here, Alice has permissions to create a blog post, but Bob does not.\n    return getPrivilegesForUser(user).then(function(privs){\n      return privs.can_create_blog_post === true;\n    });\n  };\n  filter(promises, filterFn).then(function(users){\n    // true, because the server told us only Alice can create a blog post.\n    users.length === 1;\n    // false, because Alice is the only user present in `users`\n    users[0] === bob;\n  });\n  ```\n\n  @method filter\n  @public\n  @static\n  @for rsvp\n  @param {Array} promises\n  @param {Function} filterFn - function to be called on each resolved value to\n  filter the final results.\n  @param {String} [label] optional string describing the promise. Useful for\n  tooling.\n  @return {Promise}\n*/\n\nexport default function filter(promises, filterFn, label) {\n  if (typeof filterFn !== 'function') {\n    return Promise.reject(new TypeError(\"filter expects function as a second argument\"), label);\n  }\n\n  return Promise.resolve(promises, label).then(function (promises) {\n    if (!Array.isArray(promises)) {\n      throw new TypeError(\"filter must be called with an array\");\n    }\n    return new FilterEnumerator(Promise, promises, filterFn, label).promise;\n  });\n}","var len = 0;\nvar vertxNext = void 0;\nexport default function asap(callback, arg) {\n  queue[len] = callback;\n  queue[len + 1] = arg;\n  len += 2;\n  if (len === 2) {\n    // If len is 1, that means that we need to schedule an async flush.\n    // If additional callbacks are queued before the queue is flushed, they\n    // will be processed by this flush that we are scheduling.\n    scheduleFlush();\n  }\n}\n\nvar browserWindow = typeof window !== 'undefined' ? window : undefined;\nvar browserGlobal = browserWindow || {};\nvar BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\nvar isNode = typeof self === 'undefined' && typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n// test for web worker but not in IE10\nvar isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n// node\nfunction useNextTick() {\n  var nextTick = process.nextTick;\n  // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n  // setImmediate should be used instead instead\n  var version = process.versions.node.match(/^(?:(\\d+)\\.)?(?:(\\d+)\\.)?(\\*|\\d+)$/);\n  if (Array.isArray(version) && version[1] === '0' && version[2] === '10') {\n    nextTick = setImmediate;\n  }\n  return function () {\n    return nextTick(flush);\n  };\n}\n\n// vertx\nfunction useVertxTimer() {\n  if (typeof vertxNext !== 'undefined') {\n    return function () {\n      vertxNext(flush);\n    };\n  }\n  return useSetTimeout();\n}\n\nfunction useMutationObserver() {\n  var iterations = 0;\n  var observer = new BrowserMutationObserver(flush);\n  var node = document.createTextNode('');\n  observer.observe(node, { characterData: true });\n\n  return function () {\n    return node.data = iterations = ++iterations % 2;\n  };\n}\n\n// web worker\nfunction useMessageChannel() {\n  var channel = new MessageChannel();\n  channel.port1.onmessage = flush;\n  return function () {\n    return channel.port2.postMessage(0);\n  };\n}\n\nfunction useSetTimeout() {\n  return function () {\n    return setTimeout(flush, 1);\n  };\n}\n\nvar queue = new Array(1000);\n\nfunction flush() {\n  for (var i = 0; i < len; i += 2) {\n    var callback = queue[i];\n    var arg = queue[i + 1];\n\n    callback(arg);\n\n    queue[i] = undefined;\n    queue[i + 1] = undefined;\n  }\n\n  len = 0;\n}\n\nfunction attemptVertex() {\n  try {\n    var vertx = Function('return this')().require('vertx');\n    vertxNext = vertx.runOnLoop || vertx.runOnContext;\n    return useVertxTimer();\n  } catch (e) {\n    return useSetTimeout();\n  }\n}\n\nvar scheduleFlush = void 0;\n// Decide what async method to use to triggering processing of queued callbacks:\nif (isNode) {\n  scheduleFlush = useNextTick();\n} else if (BrowserMutationObserver) {\n  scheduleFlush = useMutationObserver();\n} else if (isWorker) {\n  scheduleFlush = useMessageChannel();\n} else if (browserWindow === undefined && typeof require === 'function') {\n  scheduleFlush = attemptVertex();\n} else {\n  scheduleFlush = useSetTimeout();\n}","import data from \"./chord-data\";\nimport { chroma } from \"../pcset\";\nimport { hash } from \"rsvp\";\n\n/**\n * A dictionary of musical chords.\n *\n * This is a low level module. Probably you should use Tonal.Chord that\n * includes this module and more functionallities.\n *\n * Each musical chord is represented by an object with:\n * - {string} - name: the main name\n * - {array<string>} - names: all known names (including the main name)\n * - {array<string>} - intervals\n * - {string} - chroma: the pitchclass set chroma\n * - {integer} - setnum: the pitchclass set chroma number in decimal\n *\n * ## Usage\n *\n * ```js\n * // ES6 modules (import)\n * import ChordDictionary from \"tonal/chord-dictionary\"\n *\n * ChordDictionary.all() // => [{ name: aeolian, .... }, ]\n * ChordDictionary.find(\"M\") // => {\n *   name: \"major\",\n *   quality: \"Major\",\n *   abbreviatures: [\"M\", \"\"],\n *   chroma: \"100010010000\",\n *   intervals: [\"1P\", \"3M\", \"5P\"],\n *   setnum: 2192\n * }\n * ```\n *\n * ## API\n *\n * @module ChordDictionary\n */\nexport default { all, find };\n\nlet cached;\n\nconst toChord = data => {\n  const intervals = data[0].split(\" \");\n  const name = data[1];\n  const abbreviatures = data[2].split(\" \");\n  const chord = { name, intervals, abbreviatures };\n\n  const has = interval => intervals.indexOf(interval) !== -1;\n  chord.quality = has(\"5A\")\n    ? \"Augmented\"\n    : has(\"3M\")\n    ? \"Major\"\n    : has(\"5d\")\n    ? \"Diminished\"\n    : has(\"3m\")\n    ? \"Minor\"\n    : null;\n  chord.chroma = chroma(intervals);\n  chord.setnum = parseInt(chord.chroma, 2);\n  return Object.freeze(chord);\n};\nconst byName = (a, b) => (a.name || \"\").localeCompare(b.name);\n\n/**\n * Return a list of all available chords\n *\n * @return {array<object>} array of chords\n */\nexport function all() {\n  // FIXME: sort seems not to be working\n  return cached || (cached = data.map(toChord).sort(byName));\n}\n\nconst NO_SCALE = Object.freeze({ intervals: [], names: [] });\nconst isString = s => typeof s === \"string\";\n\n/**\n * Find a chord with the given query\n *\n * The query can include: name, intervals, chroma or setnum\n *\n * @param {*} props\n */\nexport function find(props) {\n  if (!props && props !== \"\") return NO_SCALE;\n\n  if (isString(props))\n    props = { name: props, abbreviature: props, chroma: props };\n  else if (Array.isArray(props)) props = { intervals: props };\n  else if (typeof props === \"number\") props = { setnum: props };\n\n  if (props.intervals) props.chroma = chroma(props.intervals);\n\n  const predicate = chord =>\n    (isString(props.name) && props.name === chord.name) ||\n    (isString(props.abbreviature) &&\n      chord.abbreviatures.indexOf(props.abbreviature) !== -1) ||\n    (props.chroma && props.chroma === chord.chroma) ||\n    (props.setnum && props.setnum === chord.setnum);\n  return all().find(predicate) || NO_SCALE;\n}\n","/**\n * [![npm version](https://img.shields.io/npm/v/tonal-detect.svg?style=flat-square)](https://www.npmjs.com/package/tonal-detect)\n *\n * Find chord and scale names from a collection of notes or pitch classes\n *\n * This is part of [tonal](https://www.npmjs.com/package/tonal) music theory library.\n *\n * @example\n * import { chord } from \"tonal-detect\"\n * chord([\"C\", \"E\", \"G\", \"A\"]) // => [\"CM6\", \"Am7\"]\n *\n * @example\n * const Detect = require(\"tonal-detect\")\n * Detect.chord([\"C\", \"E\", \"G\", \"A\"]) // => [\"CM6\", \"Am7\"]\n *\n * @module Detect\n */\nimport { find as findChord } from \"../chord-dictionary\";\nimport { name, props, chroma, fromMidi } from \"../note\";\nimport { compact } from \"../array\";\nimport { modes } from \"../pcset\";\n\n/**\n * Given a collection of notes or pitch classes, try to find the chord name\n * @function\n * @param {Array<String>} notes - notes (or intervals)\n * @return {Array<Object>} chord names or empty array\n * @example\n * Detect.chord([\"C\", \"E\", \"G\", \"A\"]) // => [\"CM6\", \"Am7\"]\n */\nexport function chord(notes) {\n  notes = compact(notes.map(name));\n  const sharps = notes.find(note => props(note).alt > 0) !== undefined;\n  const root = notes[0];\n  const offset = chroma(root);\n\n  const results = [];\n  function found(chord, chroma, rotation) {\n    const score = rotation - offset ? 0.5 : 1;\n    const mod = score === 1 ? \"\" : \"/\" + root;\n    const tonic = fromMidi(rotation, { pitchClass: true, sharps });\n    const name = chord.abbreviatures[0];\n    results.push({ tonic, name, mod, score });\n  }\n\n  modes(notes, false).forEach((chroma, rotation) => {\n    const chord = findChord(chroma);\n    if (chord.intervals.length) found(chord, chroma, rotation);\n  });\n\n  return results.sort((a, b) => b.score - a.score);\n}\n\n/**\n * Given a collection of notes or pitch classes, try to find the scale names\n * @function\n * @param {Array<String>} notes\n * @return {Array<String>} scale names or empty array\n * @example\n * Detect.scale([\"f3\", \"a\", \"c5\", \"e2\", \"d\", \"g2\", \"b6\"]) // => [\n * \"C major\",\n * \"D dorian\",\n * \"E phrygian\",\n * \"F lydian\",\n * \"G mixolydian\",\n * \"A aeolian\",\n * \"B locrian\"\n * ]\n */\nexport function scale(intervals) {}\n","export const range = (min, max) => Array(max - min + 1).fill().map((v,n) => n + min);\n\nexport const toRGBA = (colorStr, alpha) => {\n  if (typeof colorStr !== 'string' || !colorStr.match(/^#[0-9a-f]{6}$/i)) return 'transparent'; \n  const color = colorStr.toLowerCase();\n  \n  const r = parseInt(color.substr(1, 2), 16);\n  const g = parseInt(color.substr(3, 2), 16);\n  const b = parseInt(color.substr(5, 2), 16);\n\n  return `rgba(${r},${g},${b},${alpha})`;\n}","import Note from 'tonal/note';\nimport { range, toRGBA } from './utils';\n\nconst keyboardContainer = document.getElementById('keyboard');\n\n\nconst NOTE_RADIUS = 5;\nconst NOTE_WHITE_WIDTH = 40;\nconst NOTE_WHITE_HEIGHT = 150;\nconst NOTE_BLACK_WIDTH = 22;\nconst NOTE_BLACK_HEIGHT = 90;\nconst NOTE_TONIC_RADIUS = 5;\nconst NOTE_TONIC_BOTTOM_OFFSET = 30;\nconst NOTE_NAME_BOTTOM_OFFSET = 2;\n\n\nconst WHEEL_RADIUS = 10;\nconst WHEEL_PADDING = 5;\nconst WHEEL_MARGIN = 10;\nconst WHEEL_WIDTH = NOTE_WHITE_WIDTH;\nconst WHEEL_HEIGHT = NOTE_WHITE_HEIGHT;\nconst WHEEL_AMPLITUDE = 2 * WHEEL_HEIGHT - 80;\n\nconst pitchWheelColorDown = '#bf3a2b'\nconst pitchWheelColorUp = '#44ffaa';\nconst modWheelColor = '#44bbff';\n\nconst NOTE_WHITE_TEMPLATE = (props, posX) => `\\\n<g id=\"note-${props.midi}\" class=\"note white\" transform=\"translate(${posX},0)\">\n  <rect class=\"piano-key\" width=\"${NOTE_WHITE_WIDTH}\" height=\"${NOTE_WHITE_HEIGHT+NOTE_RADIUS}\" x=\"0\" y=\"${-NOTE_RADIUS}\" rx=\"${NOTE_RADIUS}\" ry=\"${NOTE_RADIUS}\"></rect>\n  <circle class=\"piano-tonic\" cx=\"${NOTE_WHITE_WIDTH/2}\" cy=\"${NOTE_WHITE_HEIGHT-NOTE_TONIC_BOTTOM_OFFSET}\" r=\"${NOTE_TONIC_RADIUS}\"></circle>\n  <text class=\"piano-key-name\" x=\"${NOTE_WHITE_WIDTH/2}\" y=\"${NOTE_WHITE_HEIGHT-NOTE_NAME_BOTTOM_OFFSET}\" text-anchor=\"middle\">${props.name}</text>\n</g>`;\n\nconst NOTE_BLACK_TEMPLATE = (props, posX) => `\\\n<g id=\"note-${props.midi}\" class=\"note black\" transform=\"translate(${posX - NOTE_BLACK_WIDTH/2},0)\">\n  <rect class=\"piano-key\" width=\"${NOTE_BLACK_WIDTH}\" height=\"${NOTE_BLACK_HEIGHT+NOTE_RADIUS}\" x=\"0\" y=\"${-NOTE_RADIUS}\" rx=\"${NOTE_RADIUS}\" ry=\"${NOTE_RADIUS}\"></rect>\n  <circle class=\"piano-tonic\" cx=\"${NOTE_BLACK_WIDTH/2}\" cy=\"${NOTE_BLACK_HEIGHT-NOTE_TONIC_BOTTOM_OFFSET}\" r=\"${NOTE_TONIC_RADIUS}\"></circle>\n</g>`;\n\nconst WHEEL_TEMPLATE = (id, offsetX) => `\\\n<g id=\"${id}\" transform=\"translate(${offsetX},0)\">\n  <rect class=\"wheelSocket\" width=\"${WHEEL_WIDTH}\" height=\"${WHEEL_HEIGHT}\" rx=\"${WHEEL_RADIUS}\" ry=\"${WHEEL_RADIUS}\" />\n  <g transform=\"translate(${WHEEL_PADDING},0)\" clip-path=\"url(#wheelClip)\">\n    <rect class=\"wheel\" transform=\"translate(0, ${-WHEEL_HEIGHT / 2})\" width=\"${WHEEL_WIDTH - 2 * WHEEL_PADDING}\" height=\"${WHEEL_HEIGHT * 2}\"></rect>\n  </g>\n</g>\n`;\n\nconst KEYBOARD_TEMPLATE = (keyboardNotes, wheels) => `\\\n<svg width=\"100%\" viewBox=\"${-wheels.width} 0 ${keyboardNotes.width + wheels.width} ${keyboardNotes.height}\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n  <defs>\n    <filter id=\"insetKey\">                                                            <!-- source: https://www.xanthir.com/b4Yv0 -->\n      <feOffset dx=\"0\" dy=\"-7\"/>                                                          <!-- Shadow Offset -->\n      <feGaussianBlur stdDeviation=\"5\" result=\"offset-blur\"/>                            <!-- Shadow Blur -->\n      <feComposite operator=\"out\" in=\"SourceGraphic\" in2=\"offset-blur\" result=\"inverse\"/> <!-- Invert the drop shadow to create an inner shadow -->\n      <feFlood flood-color=\"black\" flood-opacity=\"0.4\" result=\"color\"/>                   <!-- Color & Opacity -->\n      <feComposite operator=\"in\" in=\"color\" in2=\"inverse\" result=\"shadow\"/>               <!-- Clip color inside shadow -->\n      <feComponentTransfer in=\"shadow\" result=\"shadow\">                                   <!-- Shadow Opacity -->\n        <feFuncA type=\"linear\" slope=\"5\"/>\n      </feComponentTransfer>\n      <feBlend mode=\"soft-light\" in=\"shadow\" in2=\"SourceGraphic\"/>                        <!-- Put shadow over original object -->\n    </filter>\n    <filter id=\"insetWheel\">                                                            <!-- source: https://www.xanthir.com/b4Yv0 -->\n      <feOffset dx=\"0\" dy=\"0\"/>                                                          <!-- Shadow Offset -->\n      <feGaussianBlur stdDeviation=\"2\" result=\"offset-blur\"/>                            <!-- Shadow Blur -->\n      <feComposite operator=\"out\" in=\"SourceGraphic\" in2=\"offset-blur\" result=\"inverse\"/> <!-- Invert the drop shadow to create an inner shadow -->\n      <feFlood flood-color=\"black\" flood-opacity=\"1\" result=\"color\"/>                   <!-- Color & Opacity -->\n      <feComposite operator=\"in\" in=\"color\" in2=\"inverse\" result=\"shadow\"/>               <!-- Clip color inside shadow -->\n      <feComponentTransfer in=\"shadow\" result=\"shadow\">                                   <!-- Shadow Opacity -->\n        <feFuncA type=\"linear\" slope=\"1.5\"/>\n      </feComponentTransfer>\n      <feBlend mode=\"normal\" in=\"shadow\" in2=\"SourceGraphic\" />\n    </filter>\n    <linearGradient id=\"whiteKey\" gradientTransform=\"rotate(90)\">\n      <stop offset=\"0%\"  stop-color=\"#bbbbbb\" />\n      <stop offset=\"8%\"  stop-color=\"#eeeeee\" />\n      <stop offset=\"90%\" stop-color=\"#ffffff\" />\n      <stop offset=\"91%\" stop-color=\"#eeeeee\" />\n    </linearGradient>\n    <linearGradient id=\"blackKey\" gradientTransform=\"rotate(90)\">\n      <stop offset=\"0%\"  stop-color=\"#000000\" />\n      <stop offset=\"16%\" stop-color=\"#222222\" />\n      <stop offset=\"80%\" stop-color=\"#444444\" />\n      <stop offset=\"80.5%\" stop-color=\"#aaaaaa\" />\n      <stop offset=\"85%\" stop-color=\"#222222\" />\n      <stop offset=\"91%\" stop-color=\"#000000\" />\n    </linearGradient>\n    <linearGradient id=\"wheelGradient\" gradientTransform=\"rotate(90)\">\n      <stop offset=\"0%\"  stop-color=\"#000000\" />\n      <stop offset=\"45%\" stop-color=\"#555555\" />\n      <stop offset=\"46%\" stop-color=\"#111111\" />\n      <stop offset=\"49.5%\" stop-color=\"#333333\" />\n      <stop offset=\"50%\" stop-color=\"#bbbbbb\" />\n      <stop offset=\"50.5%\" stop-color=\"#444444\" />\n      <stop offset=\"51%\" stop-color=\"#555555\" />\n      <stop offset=\"54%\" stop-color=\"#666666\" />\n      <stop offset=\"55%\" stop-color=\"#333333\" />\n      <stop offset=\"91%\" stop-color=\"#000000\" />\n    </linearGradient>\n    \n    <clipPath id=\"wheelClip\">\n      <rect width=\"${WHEEL_WIDTH - 2 * WHEEL_PADDING}\" height=\"${WHEEL_HEIGHT - 2}\" y=\"1\" rx=\"${WHEEL_RADIUS / 2}\" ry=\"${WHEEL_RADIUS / 2}\" />\n    </clipPath>\n  </defs>\n\n  <g id=\"wheels\" transform=\"translate(${-wheels.width},0)\">\n    ${wheels.markup}\n  </g>\n\n  <g id=\"board\" transform=\"translate(0,0)\">\n    <rect id=\"keyboard-bg\" width=\"${keyboardNotes.width}\" height=\"${keyboardNotes.height}\" x=\"0\" y=\"0\" />\n    ${keyboardNotes.markup}\n    <rect id=\"board-border\" width=\"${keyboardNotes.width}\" height=\"${keyboardNotes.height}\" x=\"0\" y=\"0\" />\n  </g>\n</svg>\n`;\n\nfunction getWheelsMarkup(ids) {\n  return ids.reduce((wheels, id) => {\n    const markup = WHEEL_TEMPLATE(id, wheels.width);\n    \n    return {\n      width: wheels.width + WHEEL_WIDTH + WHEEL_MARGIN,\n      height: wheels.height,\n      markup: wheels.markup + markup,\n    }\n  }, { width: 0, height: WHEEL_HEIGHT, markup: ''})\n}\n\nfunction getNoteMarkup(noteNumber, offsetX) {\n  const note = Note.fromMidi(noteNumber, { sharps: true });\n  const props = Note.props(note);\n\n  if (props.alt) {\n    return {\n      width: 0,\n      isWhite: false,\n      markup: NOTE_BLACK_TEMPLATE(props, offsetX),\n    }\n  }\n\n  return {\n    width: NOTE_WHITE_WIDTH,\n    isWhite: true,\n    markup: NOTE_WHITE_TEMPLATE(props, offsetX),\n  }\n}\n\nexport function generateKeyboard(from, to, wheelIds = ['pitchWheel', 'modWheel']) {\n  const fromProps = Note.props(Note.simplify(from));\n  const toProps = Note.props(Note.simplify(to));\n\n  const noteStart = (\n    fromProps.name\n    ? fromProps.alt\n      ? fromProps.midi - 1\n      : fromProps.midi\n    : Note.midi('C2')\n  );\n\n  const noteEnd = (\n    toProps.name\n    ? toProps.alt\n      ? toProps.midi + 1\n      : toProps.midi\n    : Note.midi('B4')\n  );\n\n  const keyboardNotes = range(noteStart, noteEnd).reduce(\n    (keyboard, noteNumber) => {\n      const { width, isWhite, markup } = getNoteMarkup(noteNumber, keyboard.width);\n      return {\n        width: keyboard.width + width,\n        height: keyboard.height,\n        markup: isWhite\n        ? markup + keyboard.markup\n        : keyboard.markup + markup,\n      }\n    }, { width: 0, height: NOTE_WHITE_HEIGHT, markup: ''}\n  );\n\n  const wheels = getWheelsMarkup(wheelIds);\n  \n  return KEYBOARD_TEMPLATE(keyboardNotes, wheels);\n}\n\nexport function setPitchWheel(pitch) {\n  const pitchWheelSocket = document.querySelector('#pitchWheel .wheelSocket');\n  const pitchWheel = document.querySelector('#pitchWheel .wheel');\n\n  const translateY = -(WHEEL_HEIGHT / 2) - pitch * (WHEEL_AMPLITUDE / 4);\n  pitchWheel.setAttribute('transform', `translate(0, ${translateY})`);\n  if (pitch > 0) {\n    pitchWheelSocket.style.fill = toRGBA(pitchWheelColorUp, pitch);\n  } else {\n    pitchWheelSocket.style.fill = toRGBA(pitchWheelColorDown, -pitch);\n  }\n}\n\nexport function setModWheel(mod) {\n  const modWheelSocket = document.querySelector('#modWheel .wheelSocket');\n  const modWheel = document.querySelector('#modWheel .wheel');\n\n  const translateY = -((WHEEL_HEIGHT - WHEEL_AMPLITUDE / 2) / 2) - mod * (WHEEL_AMPLITUDE / 2) ;\n  modWheel.setAttribute('transform', `translate(0, ${translateY})`);\n  modWheelSocket.style.fill = toRGBA(modWheelColor, mod);\n}\n\nexport function initializeKeyboard() {\n  keyboardContainer.innerHTML = generateKeyboard('C0', 'C6');\n}\n","import Note from 'tonal/note';\nimport { range } from './utils';\nexport { setPitchWheel, setModWheel } from './keyboard';\n\nconst chordDisplay = document.getElementById('chord');\nconst notesDisplay = document.getElementById('notes');\n\nexport function highlightNote(noteNumber, className = 'active') {\n  const keyElement = document.getElementById(`note-${noteNumber}`);\n  if (!keyElement) return;\n\n  keyElement.classList.add(className);\n}\n\nexport function fadeNote(noteNumber) {\n  const keyElement = document.getElementById(`note-${noteNumber}`);\n  if (!keyElement) return;\n\n  keyElement.classList.remove('active');\n}\n\nexport function highlightTonic(tonic) {\n  const notes = range(0,10).map(oct => Note.midi(`${tonic}${oct}`));\n\n  for (const note of notes) {\n    highlightNote(note, 'tonic');\n  }\n}\n\nexport function fadeTonics() {\n  const elements = document.querySelectorAll('.tonic');\n\n  if (elements && elements.length) {\n    for (const element of elements) {\n      element.classList.remove('tonic');\n    }\n  }\n}\n\nexport function setChordHtml(html) {\n  chordDisplay.innerHTML = html;\n}\n\nexport function setNotesHtml(html) {\n  notesDisplay.innerHTML = html;\n}","import Note from 'tonal/note';\n\nconst ROMAN_NOTATION = false;\nconst FLAT_HTML = '<span class=\"flat\">♭</span>';\nconst SHARP_HTML = '<span class=\"sharp\">♯</span>';\n\nconst NOTES = {\n  C: 'Do',\n  D: 'Ré',\n  E: 'Mi',\n  F: 'Fa' ,\n  G: 'Sol',\n  A: 'La',\n  B: 'Si',\n}\n\nexport function chordToHtml(chord) {\n  return `\n      <span class=\"key\">${keyToHtml(chord.tonic)}</span>\n      <span class=\"chordname\">${chordNameToHtml(chord.name)}</span><span class=\"bassnote\">${chordBassToHtml(chord.mod)}</span>\n    `;\n}\n\nexport function keyToHtml(name) {\n  const tokens = Note.tokenize(name);\n\n  return `${keyName(tokens[0])}${altToHtml(tokens[1])}${tokens[2]}${tokens[3]}`;\n}\n\nfunction altToHtml(sharpOrFlat) {\n  if (!sharpOrFlat) return '';\n  if (sharpOrFlat === '#') return SHARP_HTML;\n  if (sharpOrFlat === 'b') return FLAT_HTML;\n  return sharpOrFlat;\n}\n\nfunction chordNameToHtml(name) {\n  return chordName(name)\n    .replace(/b(\\d)/g, `${FLAT_HTML}$1`)\n    .replace(/#/g, SHARP_HTML);\n}\n\n\nfunction chordBassToHtml(mod) {\n  if (!mod) return '';\n  const bass = mod.replace(/^\\//, '');\n\n  return `/${\n      keyToHtml(bass)\n        .replace(/b(\\d)/g, `${FLAT_HTML}$1`)\n        .replace(/#/g, SHARP_HTML)\n    }`;\n}\n\nfunction keyName(name) {\n  return ROMAN_NOTATION ? NOTES[name] : name;\n}\n\nfunction chordName(name) {\n  return name.substr(0,1) === 'M' ? name.substr(1) : name;\n}","import Note from 'tonal/note';\nimport { chord as detectChord } from 'tonal/detect';\nimport {\n  highlightNote,\n  fadeNote,\n  highlightTonic,\n  fadeTonics,\n  setChordHtml,\n  setNotesHtml,\n  setPitchWheel,\n  setModWheel,\n} from './ui';\nimport { chordToHtml, keyToHtml } from './chords';\n\nconst currentNotes = [];\nlet currentPitch = 0;\nlet currentModulation = 0;\n\nlet previousChord = null;\n\nexport function noteOn(noteNumber) {\n  if (!currentNotes.includes(noteNumber)) {\n    currentNotes.push(noteNumber);\n    highlightNote(noteNumber);\n  }\n  currentNotes.sort();\n  refresh();\n}\n\nexport function noteOff(noteNumber) {\n  const index = currentNotes.indexOf(noteNumber);\n  if (index > -1) {\n    currentNotes.splice(index, 1);\n    fadeNote(noteNumber);\n  }\n  refresh();\n}\n\nexport function pitchWheel(pitch) {\n  currentPitch = pitch;\n  setPitchWheel(pitch);\n}\n\nexport function modWheel(mod) {\n  currentModulation = mod;\n  setModWheel(currentModulation);\n}\n\nfunction onEvent(...args) {\n  console.log(...args);\n}\n\nfunction refresh() {\n  const notes = currentNotes.map(Note.fromMidi).map(Note.pc);\n  const chords = notes.length > 2 ? detectChord(notes) : [];\n  \n  \n  setNotesHtml(notes.map(keyToHtml).join(' '));\n  if (chords && chords.length) {\n    const chord = chords[0];\n    setChordHtml(chordToHtml(chord));\n\n\n    if (previousChord) {\n      fadeTonics();\n    }\n\n    highlightTonic(chord.tonic);\n    previousChord = chord;\n  } else {\n    setChordHtml('');\n    fadeTonics();\n  }\n}\n\nexport const controller = onEvent.bind(this, 'controller');\nexport const polyPressure = onEvent.bind(this, 'polyPressure');\n","/* source: https://github.com/cwilso/midi-synth/blob/master/js/midi.js */\n\nimport {\n  noteOff,\n  noteOn,\n  controller,\n  pitchWheel,\n  modWheel,\n  polyPressure,\n} from './events';\nimport { setChordHtml, setNotesHtml } from './ui';\n\nconst PREFERRED_MIDI = [\n  'mpk',\n  'key',\n];\n\nfunction midiMessageReceived(ev) {\n  let cmd = ev.data[0] >> 4;\n  let channel = ev.data[0] & 0xf;\n  let noteNumber = ev.data[1];\n  let velocity = ev.data[2];\n\n  if (channel === 9) return;\n  if (cmd === 8 || (cmd === 9 && velocity === 0)) {\n    // with MIDI, note on with velocity zero is the same as note off\n    // note off\n    noteOff(noteNumber);\n  } else if (cmd === 9) {\n    // note on\n    noteOn(noteNumber, velocity / 127.0);\n  } else if (cmd === 11) {\n    if (noteNumber === 1) {\n      modWheel(velocity / 127.0);\n    } else {\n      controller(noteNumber, velocity / 127.0);\n    }\n  } else if (cmd === 14) {\n    // pitch wheel\n    pitchWheel((velocity * 128.0 + noteNumber - 8192) / 8192.0);\n  } else if (cmd === 10) {\n    // poly aftertouch\n    polyPressure(noteNumber, velocity / 127);\n  } else console.log('' + ev.data[0] + ' ' + ev.data[1] + ' ' + ev.data[2]);\n}\n\nlet selectMIDI = null;\nlet midiAccess = null;\nlet midiIn = null;\n\nfunction selectMIDIIn(ev) {\n  if (midiIn) midiIn.onmidimessage = null;\n  let id = ev.target[ev.target.selectedIndex].value;\n  if (typeof midiAccess.inputs === 'function')\n    //Old Skool MIDI inputs() code\n    midiIn = midiAccess.inputs()[ev.target.selectedIndex];\n  else midiIn = midiAccess.inputs.get(id);\n  if (midiIn) midiIn.onmidimessage = midiMessageReceived;\n}\n\nfunction populateMIDIInSelect() {\n  // clear the MIDI input select\n  selectMIDI.options.length = 0;\n  if (midiIn && midiIn.state == 'disconnected') midiIn = null;\n  let firstInput = null;\n\n  let inputs = midiAccess.inputs.values();\n  for (let input = inputs.next(); input && !input.done; input = inputs.next()) {\n    input = input.value;\n\n    if (!firstInput) firstInput = input;\n    const str = input.name.toString();\n    let preferred = false;\n\n    // if we're rebuilding the list, but we already had this port open, reselect it.\n    if (midiIn && midiIn === input) preferred = true; \n\n    for (const pref of PREFERRED_MIDI) {\n      if (!midiIn && str.toLowerCase().indexOf(pref) !== -1) {\n        preferred = true;\n      }\n    }\n\n    selectMIDI.appendChild(\n      new Option(input.name, input.id, preferred, preferred),\n    );\n    if (preferred) {\n      midiIn = input;\n      midiIn.onmidimessage = midiMessageReceived;\n    }\n  }\n  if (!midiIn) {\n    midiIn = firstInput;\n    if (midiIn) midiIn.onmidimessage = midiMessageReceived;\n  }\n}\n\nfunction midiConnectionStateChange(e) {\n  console.log(`connection: ${e.port.name} ${e.port.connection} ${e.port.state}`);\n  populateMIDIInSelect();\n}\n\nfunction onMIDIStarted(midi) {\n  midiAccess = midi;\n\n  document.getElementById('app').className = 'loaded';\n  selectMIDI = document.getElementById('midiIn');\n  midi.onstatechange = midiConnectionStateChange;\n  populateMIDIInSelect();\n  selectMIDI.onchange = selectMIDIIn;\n}\n\nfunction onMIDISystemError(err) {\n  document.getElementById('app').className = 'error';\n  showError();\n  console.log(`MIDI not initialized - error encountered: ${err.code}`);\n}\n\nfunction showError() {\n  setChordHtml('Error');\n  setNotesHtml('Cannot initialize MIDI');\n}\n\nexport function initializeMidi() {\n  if (navigator.requestMIDIAccess) {\n    navigator.requestMIDIAccess().then(onMIDIStarted, onMIDISystemError);\n  } else {\n    showError();\n  }\n}\n","import './styles.css';\nimport { initializeMidi } from './midi';\nimport { initializeKeyboard } from './keyboard';\n\nlet initialized = false;\n//init: start up MIDI\nif (!initialized) {\n  initializeMidi();\n  initialized = true;\n}\n\ninitializeKeyboard();\n"]}